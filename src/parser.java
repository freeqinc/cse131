
//----------------------------------------------------
// The following code was generated by CUP v0.10k TUM Edition 20050516
// Sat Oct 10 19:14:54 PDT 2015
//----------------------------------------------------

import java_cup.runtime.*;
import java.util.Vector;
import types.*;
import STO.*;
import operators.*;

/** CUP v0.10k TUM Edition 20050516 generated parser.
  * @version Sat Oct 10 19:14:54 PDT 2015
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\301\000\002\122\002\000\002\003\004\000\002\002" +
    "\004\000\002\004\003\000\002\004\002\000\002\005\003" +
    "\000\002\005\004\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\123\002\000\002\011\010\000\002\124" +
    "\002\000\002\012\011\000\002\125\002\000\002\012\011" +
    "\000\002\126\002\000\002\012\011\000\002\127\002\000" +
    "\002\013\012\000\002\130\002\000\002\013\012\000\002" +
    "\014\003\000\002\014\002\000\002\131\002\000\002\132" +
    "\002\000\002\133\002\000\002\015\015\000\002\021\003" +
    "\000\002\021\004\000\002\022\006\000\002\023\003\000" +
    "\002\023\002\000\002\024\003\000\002\024\004\000\002" +
    "\025\003\000\002\025\003\000\002\134\002\000\002\135" +
    "\002\000\002\016\013\000\002\136\002\000\002\017\012" +
    "\000\002\026\003\000\002\026\002\000\002\027\003\000" +
    "\002\027\004\000\002\030\003\000\002\137\002\000\002" +
    "\140\002\000\002\141\002\000\002\007\020\000\002\142" +
    "\002\000\002\143\002\000\002\010\015\000\002\115\003" +
    "\000\002\115\003\000\002\116\003\000\002\116\004\000" +
    "\002\113\004\000\002\112\003\000\002\112\003\000\002" +
    "\112\003\000\002\114\003\000\002\117\003\000\002\117" +
    "\003\000\002\062\003\000\002\062\002\000\002\063\003" +
    "\000\002\063\004\000\002\064\003\000\002\065\003\000" +
    "\002\065\002\000\002\066\003\000\002\066\004\000\002" +
    "\067\005\000\002\144\002\000\002\145\002\000\002\034" +
    "\007\000\002\031\003\000\002\031\002\000\002\032\003" +
    "\000\002\032\004\000\002\033\003\000\002\033\003\000" +
    "\002\033\003\000\002\033\004\000\002\033\003\000\002" +
    "\033\003\000\002\033\003\000\002\033\003\000\002\033" +
    "\003\000\002\033\003\000\002\033\003\000\002\033\003" +
    "\000\002\033\003\000\002\033\003\000\002\033\003\000" +
    "\002\120\003\000\002\120\002\000\002\121\003\000\002" +
    "\121\005\000\002\071\006\000\002\020\003\000\002\020" +
    "\002\000\002\057\004\000\002\057\002\000\002\040\006" +
    "\000\002\041\005\000\002\060\003\000\002\060\002\000" +
    "\002\061\006\000\002\036\006\000\002\037\004\000\002" +
    "\037\002\000\002\043\005\000\002\146\002\000\002\042" +
    "\014\000\002\044\004\000\002\045\004\000\002\046\007" +
    "\000\002\047\004\000\002\047\005\000\002\050\006\000" +
    "\002\051\006\000\002\052\003\000\002\052\005\000\002" +
    "\053\003\000\002\053\003\000\002\054\003\000\002\035" +
    "\003\000\002\035\002\000\002\055\003\000\002\055\005" +
    "\000\002\100\005\000\002\100\003\000\002\101\005\000" +
    "\002\101\003\000\002\102\005\000\002\102\003\000\002" +
    "\103\005\000\002\103\003\000\002\104\005\000\002\104" +
    "\003\000\002\105\005\000\002\105\003\000\002\106\005" +
    "\000\002\106\003\000\002\077\003\000\002\077\003\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\075\003\000\002\072\003\000\002\072\003\000\002\073" +
    "\003\000\002\073\003\000\002\073\003\000\002\074\003" +
    "\000\002\074\003\000\002\076\003\000\002\070\003\000" +
    "\002\070\003\000\002\107\004\000\002\107\004\000\002" +
    "\107\004\000\002\107\004\000\002\107\006\000\002\107" +
    "\007\000\002\107\006\000\002\107\004\000\002\107\003" +
    "\000\002\110\005\000\002\110\006\000\002\110\005\000" +
    "\002\110\004\000\002\110\006\000\002\110\003\000\002" +
    "\111\005\000\002\111\003\000\002\111\003\000\002\111" +
    "\003\000\002\111\003\000\002\111\003\000\002\111\003" +
    "\000\002\111\003\000\002\111\004\000\002\111\003\000" +
    "\002\056\003\000\002\056\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0147\000\030\002\001\010\001\012\001\021\001\031" +
    "\001\033\001\035\001\041\001\072\001\073\001\106\001" +
    "\001\002\000\004\002\u0149\001\002\000\030\002\ufffd\010" +
    "\uffe7\012\uffe7\021\uffe7\031\007\033\uffe7\035\011\041\uffe7" +
    "\072\015\073\012\106\uffe7\001\002\000\030\002\ufff6\010" +
    "\ufff6\012\ufff6\021\ufff6\031\ufff6\033\ufff6\035\ufff6\041\ufff6" +
    "\072\ufff6\073\ufff6\106\ufff6\001\002\000\012\012\032\033" +
    "\035\035\u013a\041\036\001\002\000\030\002\ufff7\010\ufff7" +
    "\012\ufff7\021\ufff7\031\ufff7\033\ufff7\035\ufff7\041\ufff7\072" +
    "\ufff7\073\ufff7\106\ufff7\001\002\000\004\016\u012b\001\002" +
    "\000\004\106\253\001\002\000\016\010\030\012\032\021" +
    "\034\033\035\041\036\106\031\001\002\000\030\002\ufff9" +
    "\010\ufff9\012\ufff9\021\ufff9\031\ufff9\033\ufff9\035\ufff9\041" +
    "\ufff9\072\ufff9\073\ufff9\106\ufff9\001\002\000\016\010\uffe8" +
    "\012\uffe8\021\uffe8\033\uffe8\041\uffe8\106\uffe8\001\002\000" +
    "\030\002\ufffc\010\ufffc\012\ufffc\021\ufffc\031\ufffc\033\ufffc" +
    "\035\ufffc\041\ufffc\072\ufffc\073\ufffc\106\ufffc\001\002\000" +
    "\030\002\ufff5\010\ufff5\012\ufff5\021\ufff5\031\ufff5\033\ufff5" +
    "\035\ufff5\041\ufff5\072\ufff5\073\ufff5\106\ufff5\001\002\000" +
    "\030\002\ufffe\010\uffe7\012\uffe7\021\uffe7\031\007\033\uffe7" +
    "\035\011\041\uffe7\072\015\073\012\106\uffe7\001\002\000" +
    "\030\002\ufffa\010\ufffa\012\ufffa\021\ufffa\031\ufffa\033\ufffa" +
    "\035\ufffa\041\ufffa\072\ufffa\073\ufffa\106\ufffa\001\002\000" +
    "\004\002\000\001\002\000\030\002\ufff8\010\ufff8\012\ufff8" +
    "\021\ufff8\031\ufff8\033\ufff8\035\ufff8\041\ufff8\072\ufff8\073" +
    "\ufff8\106\ufff8\001\002\000\030\002\ufffb\010\ufffb\012\ufffb" +
    "\021\ufffb\031\ufffb\033\ufffb\035\ufffb\041\ufffb\072\ufffb\073" +
    "\ufffb\106\ufffb\001\002\000\012\004\uffc6\044\uffc6\065\uffc6" +
    "\107\uffc6\001\002\000\014\004\uffbc\044\uffbc\065\uffbc\071" +
    "\113\107\uffbc\001\002\000\004\107\242\001\002\000\004" +
    "\107\235\001\002\000\014\004\uffc0\044\uffc0\065\uffc0\071" +
    "\uffc0\107\uffc0\001\002\000\014\004\uffc1\044\uffc1\065\uffc1" +
    "\071\uffc1\107\uffc1\001\002\000\006\071\113\107\223\001" +
    "\002\000\012\010\040\012\032\033\035\041\036\001\002" +
    "\000\014\004\uffc2\044\uffc2\065\uffc2\071\uffc2\107\uffc2\001" +
    "\002\000\014\004\uffc3\044\uffc3\065\uffc3\071\uffc3\107\uffc3" +
    "\001\002\000\004\107\216\001\002\000\004\107\041\001" +
    "\002\000\004\007\042\001\002\000\046\004\070\017\077" +
    "\032\064\045\072\050\063\051\073\054\060\055\100\060" +
    "\075\061\062\067\066\071\101\074\057\076\052\103\076" +
    "\104\061\105\044\107\067\001\002\000\054\004\uff6c\005" +
    "\uff6c\007\214\020\uff6c\027\uff6c\036\uff6c\037\uff6c\043\uff6c" +
    "\046\uff6c\047\uff6c\050\uff6c\052\uff6c\053\uff6c\056\uff6c\057" +
    "\uff6c\060\uff6c\063\uff6c\065\uff6c\066\uff6c\070\uff6c\071\uff6c" +
    "\001\002\000\072\004\uff49\005\uff49\006\uff49\007\uff49\016" +
    "\uff49\020\uff49\024\uff49\027\uff49\036\uff49\037\uff49\043\uff49" +
    "\044\uff49\045\uff49\046\uff49\047\uff49\050\uff49\051\uff49\052" +
    "\uff49\053\uff49\056\uff49\057\uff49\060\uff49\061\uff49\063\uff49" +
    "\065\uff49\066\uff49\070\uff49\071\uff49\001\002\000\052\004" +
    "\uff6e\005\uff6e\020\uff6e\027\uff6e\036\uff6e\037\uff6e\043\uff6e" +
    "\046\uff6e\047\uff6e\050\uff6e\052\166\053\uff6e\056\uff6e\057" +
    "\uff6e\060\uff6e\063\uff6e\065\uff6e\066\uff6e\070\170\071\167" +
    "\001\002\000\072\004\uff4d\005\uff4d\006\uff4d\007\uff4d\016" +
    "\uff4d\020\uff4d\024\uff4d\027\uff4d\036\uff4d\037\uff4d\043\uff4d" +
    "\044\uff4d\045\uff4d\046\uff4d\047\uff4d\050\uff4d\051\uff4d\052" +
    "\uff4d\053\uff4d\056\uff4d\057\uff4d\060\uff4d\061\uff4d\063\uff4d" +
    "\065\uff4d\066\uff4d\070\uff4d\071\uff4d\001\002\000\044\004" +
    "\uff70\005\uff70\020\uff70\027\uff70\036\uff70\037\uff70\043\uff70" +
    "\046\uff70\047\uff70\050\162\053\uff70\056\uff70\057\uff70\060" +
    "\163\063\uff70\065\uff70\066\uff70\001\002\000\040\004\uff72" +
    "\005\uff72\020\uff72\027\uff72\036\160\037\154\043\uff72\046" +
    "\156\047\155\053\uff72\056\uff72\057\uff72\063\uff72\065\uff72" +
    "\066\uff72\001\002\000\072\004\uff53\005\uff53\006\200\007" +
    "\uff53\016\uff53\020\uff53\024\201\027\uff53\036\uff53\037\uff53" +
    "\043\uff53\044\175\045\176\046\uff53\047\uff53\050\uff53\051" +
    "\073\052\uff53\053\uff53\056\uff53\057\uff53\060\uff53\061\062" +
    "\063\uff53\065\uff53\066\uff53\070\uff53\071\uff53\001\002\000" +
    "\072\004\uff48\005\uff48\006\uff48\007\uff48\016\uff48\020\uff48" +
    "\024\uff48\027\uff48\036\uff48\037\uff48\043\uff48\044\uff48\045" +
    "\uff48\046\uff48\047\uff48\050\uff48\051\uff48\052\uff48\053\uff48" +
    "\056\uff48\057\uff48\060\uff48\061\uff48\063\uff48\065\uff48\066" +
    "\uff48\070\uff48\071\uff48\001\002\000\030\004\uff74\005\uff74" +
    "\020\uff74\027\152\043\uff74\053\151\056\uff74\057\uff74\063" +
    "\uff74\065\uff74\066\uff74\001\002\000\004\066\uffea\001\002" +
    "\000\024\004\145\005\uff76\020\uff76\043\uff76\056\uff76\057" +
    "\uff76\063\uff76\065\uff76\066\uff76\001\002\000\022\005\140" +
    "\020\uff78\043\uff78\056\141\057\uff78\063\uff78\065\uff78\066" +
    "\uff78\001\002\000\072\004\uff45\005\uff45\006\uff45\007\uff45" +
    "\016\uff45\020\uff45\024\uff45\027\uff45\036\uff45\037\uff45\043" +
    "\uff45\044\uff45\045\uff45\046\uff45\047\uff45\050\uff45\051\uff45" +
    "\052\uff45\053\uff45\056\uff45\057\uff45\060\uff45\061\uff45\063" +
    "\uff45\065\uff45\066\uff45\070\uff45\071\uff45\001\002\000\046" +
    "\004\070\017\077\032\064\045\072\050\063\051\073\054" +
    "\060\055\100\060\075\061\062\067\066\071\101\074\057" +
    "\076\052\103\076\104\061\105\044\107\067\001\002\000" +
    "\072\004\uff4b\005\uff4b\006\uff4b\007\uff4b\016\uff4b\020\uff4b" +
    "\024\uff4b\027\uff4b\036\uff4b\037\uff4b\043\uff4b\044\uff4b\045" +
    "\uff4b\046\uff4b\047\uff4b\050\uff4b\051\uff4b\052\uff4b\053\uff4b" +
    "\056\uff4b\057\uff4b\060\uff4b\061\uff4b\063\uff4b\065\uff4b\066" +
    "\uff4b\070\uff4b\071\uff4b\001\002\000\120\004\uff5d\005\uff5d" +
    "\006\uff5d\007\uff5d\016\uff5d\017\uff5d\020\uff5d\024\uff5d\027" +
    "\uff5d\032\uff5d\036\uff5d\037\uff5d\043\uff5d\044\uff5d\045\uff5d" +
    "\046\uff5d\047\uff5d\050\uff5d\051\uff5d\052\uff5d\053\uff5d\054" +
    "\uff5d\055\uff5d\056\uff5d\057\uff5d\060\uff5d\061\uff5d\063\uff5d" +
    "\065\uff5d\066\uff5d\067\uff5d\070\uff5d\071\uff5d\074\uff5d\076" +
    "\uff5d\103\uff5d\104\uff5d\105\uff5d\107\uff5d\001\002\000\046" +
    "\004\uff41\017\uff41\032\uff41\045\uff41\050\uff41\051\uff41\054" +
    "\uff41\055\uff41\060\uff41\061\uff41\067\uff41\071\uff41\074\uff41" +
    "\076\uff41\103\uff41\104\uff41\105\uff41\107\uff41\001\002\000" +
    "\072\004\uff47\005\uff47\006\uff47\007\uff47\016\uff47\020\uff47" +
    "\024\uff47\027\uff47\036\uff47\037\uff47\043\uff47\044\uff47\045" +
    "\uff47\046\uff47\047\uff47\050\uff47\051\uff47\052\uff47\053\uff47" +
    "\056\uff47\057\uff47\060\uff47\061\uff47\063\uff47\065\uff47\066" +
    "\uff47\070\uff47\071\uff47\001\002\000\006\063\uff7e\066\uff7e" +
    "\001\002\000\004\045\121\001\002\000\072\004\uff43\005" +
    "\uff43\006\uff43\007\uff43\016\uff43\020\uff43\024\uff43\027\uff43" +
    "\036\uff43\037\uff43\043\uff43\044\uff43\045\uff43\046\uff43\047" +
    "\uff43\050\uff43\051\uff43\052\uff43\053\uff43\056\uff43\057\uff43" +
    "\060\uff43\061\uff43\063\uff43\065\uff43\066\uff43\070\uff43\071" +
    "\uff43\001\002\000\046\004\070\017\077\032\064\045\072" +
    "\050\063\051\073\054\060\055\100\060\075\061\062\067" +
    "\066\071\101\074\057\076\052\103\076\104\061\105\044" +
    "\107\067\001\002\000\046\004\070\017\077\032\064\045" +
    "\072\050\063\051\073\054\060\055\100\060\075\061\062" +
    "\067\066\071\101\074\057\076\052\103\076\104\061\105" +
    "\044\107\067\001\002\000\056\004\070\012\032\017\077" +
    "\032\064\033\035\041\036\045\072\050\063\051\073\054" +
    "\060\055\100\060\075\061\062\067\066\071\101\074\057" +
    "\076\052\103\076\104\061\105\044\106\031\107\067\001" +
    "\002\000\120\004\uff5c\005\uff5c\006\uff5c\007\uff5c\016\uff5c" +
    "\017\uff5c\020\uff5c\024\uff5c\027\uff5c\032\uff5c\036\uff5c\037" +
    "\uff5c\043\uff5c\044\uff5c\045\uff5c\046\uff5c\047\uff5c\050\uff5c" +
    "\051\uff5c\052\uff5c\053\uff5c\054\uff5c\055\uff5c\056\uff5c\057" +
    "\uff5c\060\uff5c\061\uff5c\063\uff5c\065\uff5c\066\uff5c\067\uff5c" +
    "\070\uff5c\071\uff5c\074\uff5c\076\uff5c\103\uff5c\104\uff5c\105" +
    "\uff5c\107\uff5c\001\002\000\046\004\070\017\077\032\064" +
    "\045\072\050\063\051\073\054\060\055\100\060\075\061" +
    "\062\067\066\071\101\074\057\076\052\103\076\104\061" +
    "\105\044\107\067\001\002\000\046\004\uff42\017\uff42\032" +
    "\uff42\045\uff42\050\uff42\051\uff42\054\uff42\055\uff42\060\uff42" +
    "\061\uff42\067\uff42\071\uff42\074\uff42\076\uff42\103\uff42\104" +
    "\uff42\105\uff42\107\uff42\001\002\000\072\004\uff4a\005\uff4a" +
    "\006\uff4a\007\uff4a\016\uff4a\020\uff4a\024\uff4a\027\uff4a\036" +
    "\uff4a\037\uff4a\043\uff4a\044\uff4a\045\uff4a\046\uff4a\047\uff4a" +
    "\050\uff4a\051\uff4a\052\uff4a\053\uff4a\056\uff4a\057\uff4a\060" +
    "\uff4a\061\uff4a\063\uff4a\065\uff4a\066\uff4a\070\uff4a\071\uff4a" +
    "\001\002\000\004\107\103\001\002\000\072\004\uff46\005" +
    "\uff46\006\uff46\007\uff46\016\uff46\020\uff46\024\uff46\027\uff46" +
    "\036\uff46\037\uff46\043\uff46\044\uff46\045\uff46\046\uff46\047" +
    "\uff46\050\uff46\051\uff46\052\uff46\053\uff46\056\uff46\057\uff46" +
    "\060\uff46\061\uff46\063\uff46\065\uff46\066\uff46\070\uff46\071" +
    "\uff46\001\002\000\046\004\070\017\077\032\064\045\072" +
    "\050\063\051\073\054\060\055\100\060\075\061\062\067" +
    "\066\071\101\074\057\076\052\103\076\104\061\105\044" +
    "\107\067\001\002\000\056\004\uff5b\005\uff5b\007\uff5b\016" +
    "\uff5b\020\uff5b\027\uff5b\036\uff5b\037\uff5b\043\uff5b\046\uff5b" +
    "\047\uff5b\050\uff5b\052\uff5b\053\uff5b\056\uff5b\057\uff5b\060" +
    "\uff5b\063\uff5b\065\uff5b\066\uff5b\070\uff5b\071\uff5b\001\002" +
    "\000\072\004\uff44\005\uff44\006\uff44\007\uff44\016\uff44\020" +
    "\uff44\024\uff44\027\uff44\036\uff44\037\uff44\043\uff44\044\uff44" +
    "\045\uff44\046\uff44\047\uff44\050\uff44\051\uff44\052\uff44\053" +
    "\uff44\056\uff44\057\uff44\060\uff44\061\uff44\063\uff44\065\uff44" +
    "\066\uff44\070\uff44\071\uff44\001\002\000\056\004\uff59\005" +
    "\uff59\007\uff59\016\uff59\020\uff59\027\uff59\036\uff59\037\uff59" +
    "\043\uff59\046\uff59\047\uff59\050\uff59\052\uff59\053\uff59\056" +
    "\uff59\057\uff59\060\uff59\063\uff59\065\uff59\066\uff59\070\uff59" +
    "\071\uff59\001\002\000\004\071\113\001\002\000\004\065" +
    "\111\001\002\000\004\065\110\001\002\000\072\004\uff4c" +
    "\005\uff4c\006\uff4c\007\uff4c\016\uff4c\020\uff4c\024\uff4c\027" +
    "\uff4c\036\uff4c\037\uff4c\043\uff4c\044\uff4c\045\uff4c\046\uff4c" +
    "\047\uff4c\050\uff4c\051\uff4c\052\uff4c\053\uff4c\056\uff4c\057" +
    "\uff4c\060\uff4c\061\uff4c\063\uff4c\065\uff4c\066\uff4c\070\uff4c" +
    "\071\uff4c\001\002\000\046\004\070\017\077\032\064\045" +
    "\072\050\063\051\073\054\060\055\100\060\075\061\062" +
    "\067\066\071\101\074\057\076\052\103\076\104\061\105" +
    "\044\107\067\001\002\000\056\004\uff55\005\uff55\007\uff55" +
    "\016\uff55\020\uff55\027\uff55\036\uff55\037\uff55\043\uff55\046" +
    "\uff55\047\uff55\050\uff55\052\uff55\053\uff55\056\uff55\057\uff55" +
    "\060\uff55\063\uff55\065\uff55\066\uff55\070\uff55\071\uff55\001" +
    "\002\000\014\004\uffb9\044\uffb9\065\uffb9\071\uffb9\107\uffb9" +
    "\001\002\000\014\004\uffc5\044\uffc5\065\uffc5\071\113\107" +
    "\uffc5\001\002\000\014\004\uffbb\044\uffbb\065\uffbb\071\uffbb" +
    "\107\uffbb\001\002\000\014\004\uffba\044\uffba\065\uffba\071" +
    "\uffba\107\uffba\001\002\000\056\004\uff54\005\uff54\007\uff54" +
    "\016\uff54\020\uff54\027\uff54\036\uff54\037\uff54\043\uff54\046" +
    "\uff54\047\uff54\050\uff54\052\uff54\053\uff54\056\uff54\057\uff54" +
    "\060\uff54\063\uff54\065\uff54\066\uff54\070\uff54\071\uff54\001" +
    "\002\000\056\004\uff5a\005\uff5a\007\uff5a\016\uff5a\020\uff5a" +
    "\027\uff5a\036\uff5a\037\uff5a\043\uff5a\046\uff5a\047\uff5a\050" +
    "\uff5a\052\uff5a\053\uff5a\056\uff5a\057\uff5a\060\uff5a\063\uff5a" +
    "\065\uff5a\066\uff5a\070\uff5a\071\uff5a\001\002\000\056\004" +
    "\070\012\032\017\077\032\064\033\035\041\036\045\072" +
    "\050\063\051\073\054\060\055\100\060\075\061\062\067" +
    "\066\071\101\074\057\076\052\103\076\104\061\105\044" +
    "\106\031\107\067\001\002\000\004\065\136\001\002\000" +
    "\014\004\uffc7\044\uffc7\065\uffc7\071\113\107\uffc7\001\002" +
    "\000\006\044\126\065\uffb7\001\002\000\012\004\uffc8\044" +
    "\uffc8\065\uffc8\107\uffc8\001\002\000\046\004\070\017\077" +
    "\032\064\045\072\050\063\051\073\054\060\055\100\060" +
    "\075\061\062\067\066\071\101\074\057\076\052\103\076" +
    "\104\061\105\044\107\067\001\002\000\004\065\133\001" +
    "\002\000\016\007\uffb8\016\uffb8\020\uffb8\044\126\065\uffb8" +
    "\066\uffb8\001\002\000\016\007\uffb6\016\uffb6\020\uffb6\044" +
    "\uffb6\065\uffb6\066\uffb6\001\002\000\016\007\uffb5\016\uffb5" +
    "\020\uffb5\044\uffb5\065\uffb5\066\uffb5\001\002\000\056\004" +
    "\uff56\005\uff56\007\uff56\016\uff56\020\uff56\027\uff56\036\uff56" +
    "\037\uff56\043\uff56\046\uff56\047\uff56\050\uff56\052\uff56\053" +
    "\uff56\056\uff56\057\uff56\060\uff56\063\uff56\065\uff56\066\uff56" +
    "\070\uff56\071\uff56\001\002\000\004\063\135\001\002\000" +
    "\016\007\uffb4\016\uffb4\020\uffb4\044\uffb4\065\uffb4\066\uffb4" +
    "\001\002\000\056\004\uff57\005\uff57\007\uff57\016\uff57\020" +
    "\uff57\027\uff57\036\uff57\037\uff57\043\uff57\046\uff57\047\uff57" +
    "\050\uff57\052\uff57\053\uff57\056\uff57\057\uff57\060\uff57\063" +
    "\uff57\065\uff57\066\uff57\070\uff57\071\uff57\001\002\000\056" +
    "\004\uff58\005\uff58\007\uff58\016\uff58\020\uff58\027\uff58\036" +
    "\uff58\037\uff58\043\uff58\046\uff58\047\uff58\050\uff58\052\uff58" +
    "\053\uff58\056\uff58\057\uff58\060\uff58\063\uff58\065\uff58\066" +
    "\uff58\070\uff58\071\uff58\001\002\000\046\004\uff60\017\uff60" +
    "\032\uff60\045\uff60\050\uff60\051\uff60\054\uff60\055\uff60\060" +
    "\uff60\061\uff60\067\uff60\071\uff60\074\uff60\076\uff60\103\uff60" +
    "\104\uff60\105\uff60\107\uff60\001\002\000\046\004\uff5f\017" +
    "\uff5f\032\uff5f\045\uff5f\050\uff5f\051\uff5f\054\uff5f\055\uff5f" +
    "\060\uff5f\061\uff5f\067\uff5f\071\uff5f\074\uff5f\076\uff5f\103" +
    "\uff5f\104\uff5f\105\uff5f\107\uff5f\001\002\000\046\004\070" +
    "\017\077\032\064\045\072\050\063\051\073\054\060\055" +
    "\100\060\075\061\062\067\066\071\101\074\057\076\052" +
    "\103\076\104\061\105\044\107\067\001\002\000\052\004" +
    "\uff6c\005\uff6c\020\uff6c\027\uff6c\036\uff6c\037\uff6c\043\uff6c" +
    "\046\uff6c\047\uff6c\050\uff6c\052\uff6c\053\uff6c\056\uff6c\057" +
    "\uff6c\060\uff6c\063\uff6c\065\uff6c\066\uff6c\070\uff6c\071\uff6c" +
    "\001\002\000\024\004\145\005\uff77\020\uff77\043\uff77\056" +
    "\uff77\057\uff77\063\uff77\065\uff77\066\uff77\001\002\000\046" +
    "\004\uff5e\017\uff5e\032\uff5e\045\uff5e\050\uff5e\051\uff5e\054" +
    "\uff5e\055\uff5e\060\uff5e\061\uff5e\067\uff5e\071\uff5e\074\uff5e" +
    "\076\uff5e\103\uff5e\104\uff5e\105\uff5e\107\uff5e\001\002\000" +
    "\046\004\070\017\077\032\064\045\072\050\063\051\073" +
    "\054\060\055\100\060\075\061\062\067\066\071\101\074" +
    "\057\076\052\103\076\104\061\105\044\107\067\001\002" +
    "\000\030\004\uff75\005\uff75\020\uff75\027\152\043\uff75\053" +
    "\151\056\uff75\057\uff75\063\uff75\065\uff75\066\uff75\001\002" +
    "\000\046\004\070\017\077\032\064\045\072\050\063\051" +
    "\073\054\060\055\100\060\075\061\062\067\066\071\101" +
    "\074\057\076\052\103\076\104\061\105\044\107\067\001" +
    "\002\000\046\004\uff6a\017\uff6a\032\uff6a\045\uff6a\050\uff6a" +
    "\051\uff6a\054\uff6a\055\uff6a\060\uff6a\061\uff6a\067\uff6a\071" +
    "\uff6a\074\uff6a\076\uff6a\103\uff6a\104\uff6a\105\uff6a\107\uff6a" +
    "\001\002\000\046\004\uff6b\017\uff6b\032\uff6b\045\uff6b\050" +
    "\uff6b\051\uff6b\054\uff6b\055\uff6b\060\uff6b\061\uff6b\067\uff6b" +
    "\071\uff6b\074\uff6b\076\uff6b\103\uff6b\104\uff6b\105\uff6b\107" +
    "\uff6b\001\002\000\040\004\uff73\005\uff73\020\uff73\027\uff73" +
    "\036\160\037\154\043\uff73\046\156\047\155\053\uff73\056" +
    "\uff73\057\uff73\063\uff73\065\uff73\066\uff73\001\002\000\046" +
    "\004\uff66\017\uff66\032\uff66\045\uff66\050\uff66\051\uff66\054" +
    "\uff66\055\uff66\060\uff66\061\uff66\067\uff66\071\uff66\074\uff66" +
    "\076\uff66\103\uff66\104\uff66\105\uff66\107\uff66\001\002\000" +
    "\046\004\uff67\017\uff67\032\uff67\045\uff67\050\uff67\051\uff67" +
    "\054\uff67\055\uff67\060\uff67\061\uff67\067\uff67\071\uff67\074" +
    "\uff67\076\uff67\103\uff67\104\uff67\105\uff67\107\uff67\001\002" +
    "\000\046\004\uff69\017\uff69\032\uff69\045\uff69\050\uff69\051" +
    "\uff69\054\uff69\055\uff69\060\uff69\061\uff69\067\uff69\071\uff69" +
    "\074\uff69\076\uff69\103\uff69\104\uff69\105\uff69\107\uff69\001" +
    "\002\000\046\004\070\017\077\032\064\045\072\050\063" +
    "\051\073\054\060\055\100\060\075\061\062\067\066\071" +
    "\101\074\057\076\052\103\076\104\061\105\044\107\067" +
    "\001\002\000\046\004\uff68\017\uff68\032\uff68\045\uff68\050" +
    "\uff68\051\uff68\054\uff68\055\uff68\060\uff68\061\uff68\067\uff68" +
    "\071\uff68\074\uff68\076\uff68\103\uff68\104\uff68\105\uff68\107" +
    "\uff68\001\002\000\044\004\uff71\005\uff71\020\uff71\027\uff71" +
    "\036\uff71\037\uff71\043\uff71\046\uff71\047\uff71\050\162\053" +
    "\uff71\056\uff71\057\uff71\060\163\063\uff71\065\uff71\066\uff71" +
    "\001\002\000\046\004\uff64\017\uff64\032\uff64\045\uff64\050" +
    "\uff64\051\uff64\054\uff64\055\uff64\060\uff64\061\uff64\067\uff64" +
    "\071\uff64\074\uff64\076\uff64\103\uff64\104\uff64\105\uff64\107" +
    "\uff64\001\002\000\046\004\uff65\017\uff65\032\uff65\045\uff65" +
    "\050\uff65\051\uff65\054\uff65\055\uff65\060\uff65\061\uff65\067" +
    "\uff65\071\uff65\074\uff65\076\uff65\103\uff65\104\uff65\105\uff65" +
    "\107\uff65\001\002\000\046\004\070\017\077\032\064\045" +
    "\072\050\063\051\073\054\060\055\100\060\075\061\062" +
    "\067\066\071\101\074\057\076\052\103\076\104\061\105" +
    "\044\107\067\001\002\000\052\004\uff6f\005\uff6f\020\uff6f" +
    "\027\uff6f\036\uff6f\037\uff6f\043\uff6f\046\uff6f\047\uff6f\050" +
    "\uff6f\052\166\053\uff6f\056\uff6f\057\uff6f\060\uff6f\063\uff6f" +
    "\065\uff6f\066\uff6f\070\170\071\167\001\002\000\046\004" +
    "\uff61\017\uff61\032\uff61\045\uff61\050\uff61\051\uff61\054\uff61" +
    "\055\uff61\060\uff61\061\uff61\067\uff61\071\uff61\074\uff61\076" +
    "\uff61\103\uff61\104\uff61\105\uff61\107\uff61\001\002\000\046" +
    "\004\uff63\017\uff63\032\uff63\045\uff63\050\uff63\051\uff63\054" +
    "\uff63\055\uff63\060\uff63\061\uff63\067\uff63\071\uff63\074\uff63" +
    "\076\uff63\103\uff63\104\uff63\105\uff63\107\uff63\001\002\000" +
    "\046\004\uff62\017\uff62\032\uff62\045\uff62\050\uff62\051\uff62" +
    "\054\uff62\055\uff62\060\uff62\061\uff62\067\uff62\071\uff62\074" +
    "\uff62\076\uff62\103\uff62\104\uff62\105\uff62\107\uff62\001\002" +
    "\000\046\004\070\017\077\032\064\045\072\050\063\051" +
    "\073\054\060\055\100\060\075\061\062\067\066\071\101" +
    "\074\057\076\052\103\076\104\061\105\044\107\067\001" +
    "\002\000\052\004\uff6d\005\uff6d\020\uff6d\027\uff6d\036\uff6d" +
    "\037\uff6d\043\uff6d\046\uff6d\047\uff6d\050\uff6d\052\uff6d\053" +
    "\uff6d\056\uff6d\057\uff6d\060\uff6d\063\uff6d\065\uff6d\066\uff6d" +
    "\070\uff6d\071\uff6d\001\002\000\004\066\174\001\002\000" +
    "\126\002\uffe9\004\uffe9\010\uffe9\012\uffe9\013\uffe9\015\uffe9" +
    "\017\uffe9\021\uffe9\022\uffe9\023\uffe9\030\uffe9\031\uffe9\032" +
    "\uffe9\033\uffe9\034\uffe9\035\uffe9\040\uffe9\041\uffe9\043\uffe9" +
    "\045\uffe9\050\uffe9\051\uffe9\054\uffe9\055\uffe9\060\uffe9\061" +
    "\uffe9\062\uffe9\064\uffe9\067\uffe9\071\uffe9\072\uffe9\073\uffe9" +
    "\074\uffe9\076\uffe9\077\uffe9\101\uffe9\102\uffe9\103\uffe9\104" +
    "\uffe9\105\uffe9\106\uffe9\107\uffe9\001\002\000\046\004\070" +
    "\017\077\032\064\045\072\050\063\051\073\054\060\055" +
    "\100\060\075\061\062\067\066\071\101\074\057\076\052" +
    "\103\076\104\061\105\044\107\067\001\002\000\050\004" +
    "\070\017\077\032\064\045\072\050\063\051\073\054\060" +
    "\055\100\060\075\061\062\065\uff7c\067\066\071\101\074" +
    "\057\076\052\103\076\104\061\105\044\107\067\001\002" +
    "\000\072\004\uff4f\005\uff4f\006\uff4f\007\uff4f\016\uff4f\020" +
    "\uff4f\024\uff4f\027\uff4f\036\uff4f\037\uff4f\043\uff4f\044\uff4f" +
    "\045\uff4f\046\uff4f\047\uff4f\050\uff4f\051\uff4f\052\uff4f\053" +
    "\uff4f\056\uff4f\057\uff4f\060\uff4f\061\uff4f\063\uff4f\065\uff4f" +
    "\066\uff4f\070\uff4f\071\uff4f\001\002\000\004\107\203\001" +
    "\002\000\004\107\202\001\002\000\072\004\uff52\005\uff52" +
    "\006\uff52\007\uff52\016\uff52\020\uff52\024\uff52\027\uff52\036" +
    "\uff52\037\uff52\043\uff52\044\uff52\045\uff52\046\uff52\047\uff52" +
    "\050\uff52\051\uff52\052\uff52\053\uff52\056\uff52\057\uff52\060" +
    "\uff52\061\uff52\063\uff52\065\uff52\066\uff52\070\uff52\071\uff52" +
    "\001\002\000\072\004\uff50\005\uff50\006\uff50\007\uff50\016" +
    "\uff50\020\uff50\024\uff50\027\uff50\036\uff50\037\uff50\043\uff50" +
    "\044\uff50\045\uff50\046\uff50\047\uff50\050\uff50\051\uff50\052" +
    "\uff50\053\uff50\056\uff50\057\uff50\060\uff50\061\uff50\063\uff50" +
    "\065\uff50\066\uff50\070\uff50\071\uff50\001\002\000\006\020" +
    "\uff7b\065\uff7b\001\002\000\006\020\210\065\uff7d\001\002" +
    "\000\004\065\207\001\002\000\072\004\uff4e\005\uff4e\006" +
    "\uff4e\007\uff4e\016\uff4e\020\uff4e\024\uff4e\027\uff4e\036\uff4e" +
    "\037\uff4e\043\uff4e\044\uff4e\045\uff4e\046\uff4e\047\uff4e\050" +
    "\uff4e\051\uff4e\052\uff4e\053\uff4e\056\uff4e\057\uff4e\060\uff4e" +
    "\061\uff4e\063\uff4e\065\uff4e\066\uff4e\070\uff4e\071\uff4e\001" +
    "\002\000\046\004\070\017\077\032\064\045\072\050\063" +
    "\051\073\054\060\055\100\060\075\061\062\067\066\071" +
    "\101\074\057\076\052\103\076\104\061\105\044\107\067" +
    "\001\002\000\006\020\uff7a\065\uff7a\001\002\000\004\063" +
    "\213\001\002\000\072\004\uff51\005\uff51\006\uff51\007\uff51" +
    "\016\uff51\020\uff51\024\uff51\027\uff51\036\uff51\037\uff51\043" +
    "\uff51\044\uff51\045\uff51\046\uff51\047\uff51\050\uff51\051\uff51" +
    "\052\uff51\053\uff51\056\uff51\057\uff51\060\uff51\061\uff51\063" +
    "\uff51\065\uff51\066\uff51\070\uff51\071\uff51\001\002\000\046" +
    "\004\070\017\077\032\064\045\072\050\063\051\073\054" +
    "\060\055\100\060\075\061\062\067\066\071\101\074\057" +
    "\076\052\103\076\104\061\105\044\107\067\001\002\000" +
    "\016\020\uff79\043\uff79\057\uff79\063\uff79\065\uff79\066\uff79" +
    "\001\002\000\004\007\217\001\002\000\046\004\070\017" +
    "\077\032\064\045\072\050\063\051\073\054\060\055\100" +
    "\060\075\061\062\067\066\071\101\074\057\076\052\103" +
    "\076\104\061\105\044\107\067\001\002\000\004\066\uffec" +
    "\001\002\000\004\066\222\001\002\000\126\002\uffeb\004" +
    "\uffeb\010\uffeb\012\uffeb\013\uffeb\015\uffeb\017\uffeb\021\uffeb" +
    "\022\uffeb\023\uffeb\030\uffeb\031\uffeb\032\uffeb\033\uffeb\034" +
    "\uffeb\035\uffeb\040\uffeb\041\uffeb\043\uffeb\045\uffeb\050\uffeb" +
    "\051\uffeb\054\uffeb\055\uffeb\060\uffeb\061\uffeb\062\uffeb\064" +
    "\uffeb\067\uffeb\071\uffeb\072\uffeb\073\uffeb\074\uffeb\076\uffeb" +
    "\077\uffeb\101\uffeb\102\uffeb\103\uffeb\104\uffeb\105\uffeb\106" +
    "\uffeb\107\uffeb\001\002\000\010\016\uffb7\044\126\066\uffb7" +
    "\001\002\000\006\016\225\066\uff91\001\002\000\004\045" +
    "\232\001\002\000\004\066\uff92\001\002\000\004\066\uffee" +
    "\001\002\000\004\066\231\001\002\000\126\002\uffed\004" +
    "\uffed\010\uffed\012\uffed\013\uffed\015\uffed\017\uffed\021\uffed" +
    "\022\uffed\023\uffed\030\uffed\031\uffed\032\uffed\033\uffed\034" +
    "\uffed\035\uffed\040\uffed\041\uffed\043\uffed\045\uffed\050\uffed" +
    "\051\uffed\054\uffed\055\uffed\060\uffed\061\uffed\062\uffed\064" +
    "\uffed\067\uffed\071\uffed\072\uffed\073\uffed\074\uffed\076\uffed" +
    "\077\uffed\101\uffed\102\uffed\103\uffed\104\uffed\105\uffed\106" +
    "\uffed\107\uffed\001\002\000\050\004\070\017\077\032\064" +
    "\045\072\050\063\051\073\054\060\055\100\060\075\061" +
    "\062\065\uff7c\067\066\071\101\074\057\076\052\103\076" +
    "\104\061\105\044\107\067\001\002\000\004\065\234\001" +
    "\002\000\004\066\uff90\001\002\000\004\007\236\001\002" +
    "\000\046\004\070\017\077\032\064\045\072\050\063\051" +
    "\073\054\060\055\100\060\075\061\062\067\066\071\101" +
    "\074\057\076\052\103\076\104\061\105\044\107\067\001" +
    "\002\000\004\066\ufff0\001\002\000\004\066\241\001\002" +
    "\000\126\002\uffef\004\uffef\010\uffef\012\uffef\013\uffef\015" +
    "\uffef\017\uffef\021\uffef\022\uffef\023\uffef\030\uffef\031\uffef" +
    "\032\uffef\033\uffef\034\uffef\035\uffef\040\uffef\041\uffef\043" +
    "\uffef\045\uffef\050\uffef\051\uffef\054\uffef\055\uffef\060\uffef" +
    "\061\uffef\062\uffef\064\uffef\067\uffef\071\uffef\072\uffef\073" +
    "\uffef\074\uffef\076\uffef\077\uffef\101\uffef\102\uffef\103\uffef" +
    "\104\uffef\105\uffef\106\uffef\107\uffef\001\002\000\010\007" +
    "\uffb7\044\126\066\uffb7\001\002\000\006\007\245\066\uff95" +
    "\001\002\000\004\066\ufff2\001\002\000\046\004\070\017" +
    "\077\032\064\045\072\050\063\051\073\054\060\055\100" +
    "\060\075\061\062\067\066\071\101\074\057\076\052\103" +
    "\076\104\061\105\044\107\067\001\002\000\004\066\uff96" +
    "\001\002\000\004\066\250\001\002\000\126\002\ufff1\004" +
    "\ufff1\010\ufff1\012\ufff1\013\ufff1\015\ufff1\017\ufff1\021\ufff1" +
    "\022\ufff1\023\ufff1\030\ufff1\031\ufff1\032\ufff1\033\ufff1\034" +
    "\ufff1\035\ufff1\040\ufff1\041\ufff1\043\ufff1\045\ufff1\050\ufff1" +
    "\051\ufff1\054\ufff1\055\ufff1\060\ufff1\061\ufff1\062\ufff1\064" +
    "\ufff1\067\ufff1\071\ufff1\072\ufff1\073\ufff1\074\ufff1\076\ufff1" +
    "\077\ufff1\101\ufff1\102\ufff1\103\ufff1\104\ufff1\105\ufff1\106" +
    "\ufff1\107\ufff1\001\002\000\012\004\uffc4\044\uffc4\065\uffc4" +
    "\107\uffc4\001\002\000\014\004\uffbd\044\uffbd\065\uffbd\071" +
    "\113\107\uffbd\001\002\000\004\043\254\001\002\000\012" +
    "\012\uffe6\033\uffe6\041\uffe6\106\uffe6\001\002\000\012\012" +
    "\032\033\035\041\036\106\031\001\002\000\020\012\032" +
    "\033\035\035\uffde\041\036\062\uffde\075\265\106\267\001" +
    "\002\000\004\107\261\001\002\000\020\012\uffe2\033\uffe2" +
    "\035\uffe2\041\uffe2\062\uffe2\075\uffe2\106\uffe2\001\002\000" +
    "\006\044\126\066\uffb7\001\002\000\004\066\263\001\002" +
    "\000\020\012\uffe0\033\uffe0\035\uffe0\041\uffe0\062\uffe0\075" +
    "\uffe0\106\uffe0\001\002\000\012\035\uffda\062\uffda\075\uffda" +
    "\106\uffda\001\002\000\004\106\u0124\001\002\000\020\012" +
    "\uffe1\033\uffe1\035\uffe1\041\uffe1\062\uffe1\075\uffe1\106\uffe1" +
    "\001\002\000\006\045\uffd9\071\uffc0\001\002\000\012\035" +
    "\uffdf\062\uffdf\075\265\106\305\001\002\000\012\035\uffdd" +
    "\062\uffdd\075\uffdd\106\uffdd\001\002\000\012\035\uffdb\062" +
    "\uffdb\075\uffdb\106\uffdb\001\002\000\006\035\uffe5\062\uffe5" +
    "\001\002\000\006\035\011\062\uffd3\001\002\000\006\035" +
    "\uffd2\062\uffd2\001\002\000\006\035\011\062\uffd4\001\002" +
    "\000\006\035\uffd0\062\uffd0\001\002\000\004\062\uffe4\001" +
    "\002\000\004\062\302\001\002\000\004\066\303\001\002" +
    "\000\030\002\uffe3\010\uffe3\012\uffe3\021\uffe3\031\uffe3\033" +
    "\uffe3\035\uffe3\041\uffe3\072\uffe3\073\uffe3\106\uffe3\001\002" +
    "\000\006\035\uffd1\062\uffd1\001\002\000\004\045\uffd9\001" +
    "\002\000\012\035\uffdc\062\uffdc\075\uffdc\106\uffdc\001\002" +
    "\000\004\045\310\001\002\000\014\012\032\033\035\041" +
    "\036\065\uff9c\106\031\001\002\000\006\004\365\107\uff97" +
    "\001\002\000\006\020\u011f\065\uff9d\001\002\000\006\020" +
    "\uff9b\065\uff9b\001\002\000\004\065\315\001\002\000\004" +
    "\043\uffd8\001\002\000\004\043\317\001\002\000\116\004" +
    "\070\010\uffe7\012\uffe7\013\347\015\337\017\077\021\uffe7" +
    "\022\323\023\325\030\343\032\064\033\uffe7\034\351\040" +
    "\353\041\uffe7\043\332\045\072\050\063\051\073\054\060" +
    "\055\100\060\075\061\062\062\uffaf\064\327\067\066\071" +
    "\101\072\015\074\057\076\052\077\322\101\333\102\324" +
    "\103\076\104\061\105\044\106\uffe7\107\067\001\002\000" +
    "\116\004\uffa2\010\uffa2\012\uffa2\013\uffa2\015\uffa2\017\uffa2" +
    "\021\uffa2\022\uffa2\023\uffa2\030\uffa2\032\uffa2\033\uffa2\034" +
    "\uffa2\040\uffa2\041\uffa2\043\uffa2\045\uffa2\050\uffa2\051\uffa2" +
    "\054\uffa2\055\uffa2\060\uffa2\061\uffa2\062\uffa2\064\uffa2\067" +
    "\uffa2\071\uffa2\072\uffa2\074\uffa2\076\uffa2\077\uffa2\101\uffa2" +
    "\102\uffa2\103\uffa2\104\uffa2\105\uffa2\106\uffa2\107\uffa2\001" +
    "\002\000\116\004\uffa3\010\uffa3\012\uffa3\013\uffa3\015\uffa3" +
    "\017\uffa3\021\uffa3\022\uffa3\023\uffa3\030\uffa3\032\uffa3\033" +
    "\uffa3\034\uffa3\040\uffa3\041\uffa3\043\uffa3\045\uffa3\050\uffa3" +
    "\051\uffa3\054\uffa3\055\uffa3\060\uffa3\061\uffa3\062\uffa3\064" +
    "\uffa3\067\uffa3\071\uffa3\072\uffa3\074\uffa3\076\uffa3\077\uffa3" +
    "\101\uffa3\102\uffa3\103\uffa3\104\uffa3\105\uffa3\106\uffa3\107" +
    "\uffa3\001\002\000\046\004\070\017\077\032\064\045\072" +
    "\050\063\051\073\054\060\055\100\060\075\061\062\067" +
    "\066\071\101\074\057\076\052\103\076\104\061\105\044" +
    "\107\067\001\002\000\004\066\u011c\001\002\000\046\004" +
    "\070\017\077\032\064\045\072\050\063\051\073\054\060" +
    "\055\100\060\075\061\062\067\066\071\101\074\057\076" +
    "\052\103\076\104\061\105\044\107\067\001\002\000\004" +
    "\057\u0112\001\002\000\116\004\uffa1\010\uffa1\012\uffa1\013" +
    "\uffa1\015\uffa1\017\uffa1\021\uffa1\022\uffa1\023\uffa1\030\uffa1" +
    "\032\uffa1\033\uffa1\034\uffa1\040\uffa1\041\uffa1\043\uffa1\045" +
    "\uffa1\050\uffa1\051\uffa1\054\uffa1\055\uffa1\060\uffa1\061\uffa1" +
    "\062\uffa1\064\uffa1\067\uffa1\071\uffa1\072\uffa1\074\uffa1\076" +
    "\uffa1\077\uffa1\101\uffa1\102\uffa1\103\uffa1\104\uffa1\105\uffa1" +
    "\106\uffa1\107\uffa1\001\002\000\050\004\070\017\077\032" +
    "\064\045\072\050\063\051\073\054\060\055\100\060\075" +
    "\061\062\066\u0110\067\066\071\101\074\057\076\052\103" +
    "\076\104\061\105\044\107\067\001\002\000\116\004\uffa0" +
    "\010\uffa0\012\uffa0\013\uffa0\015\uffa0\017\uffa0\021\uffa0\022" +
    "\uffa0\023\uffa0\030\uffa0\032\uffa0\033\uffa0\034\uffa0\040\uffa0" +
    "\041\uffa0\043\uffa0\045\uffa0\050\uffa0\051\uffa0\054\uffa0\055" +
    "\uffa0\060\uffa0\061\uffa0\062\uffa0\064\uffa0\067\uffa0\071\uffa0" +
    "\072\uffa0\074\uffa0\076\uffa0\077\uffa0\101\uffa0\102\uffa0\103" +
    "\uffa0\104\uffa0\105\uffa0\106\uffa0\107\uffa0\001\002\000\116" +
    "\004\uffa7\010\uffa7\012\uffa7\013\uffa7\015\uffa7\017\uffa7\021" +
    "\uffa7\022\uffa7\023\uffa7\030\uffa7\032\uffa7\033\uffa7\034\uffa7" +
    "\040\uffa7\041\uffa7\043\uffa7\045\uffa7\050\uffa7\051\uffa7\054" +
    "\uffa7\055\uffa7\060\uffa7\061\uffa7\062\uffa7\064\uffa7\067\uffa7" +
    "\071\uffa7\072\uffa7\074\uffa7\076\uffa7\077\uffa7\101\uffa7\102" +
    "\uffa7\103\uffa7\104\uffa7\105\uffa7\106\uffa7\107\uffa7\001\002" +
    "\000\116\004\uffb3\010\uffb3\012\uffb3\013\uffb3\015\uffb3\017" +
    "\uffb3\021\uffb3\022\uffb3\023\uffb3\030\uffb3\032\uffb3\033\uffb3" +
    "\034\uffb3\040\uffb3\041\uffb3\043\uffb3\045\uffb3\050\uffb3\051" +
    "\uffb3\054\uffb3\055\uffb3\060\uffb3\061\uffb3\062\uffb3\064\uffb3" +
    "\067\uffb3\071\uffb3\072\uffb3\074\uffb3\076\uffb3\077\uffb3\101" +
    "\uffb3\102\uffb3\103\uffb3\104\uffb3\105\uffb3\106\uffb3\107\uffb3" +
    "\001\002\000\046\004\070\017\077\032\064\045\072\050" +
    "\063\051\073\054\060\055\100\060\075\061\062\067\066" +
    "\071\101\074\057\076\052\103\076\104\061\105\044\107" +
    "\067\001\002\000\116\004\070\010\uffe7\012\uffe7\013\347" +
    "\015\337\017\077\021\uffe7\022\323\023\325\030\343\032" +
    "\064\033\uffe7\034\351\040\353\041\uffe7\043\332\045\072" +
    "\050\063\051\073\054\060\055\100\060\075\061\062\062" +
    "\uffb0\064\327\067\066\071\101\072\015\074\057\076\052" +
    "\077\322\101\333\102\324\103\076\104\061\105\044\106" +
    "\uffe7\107\067\001\002\000\116\004\uff9f\010\uff9f\012\uff9f" +
    "\013\uff9f\015\uff9f\017\uff9f\021\uff9f\022\uff9f\023\uff9f\030" +
    "\uff9f\032\uff9f\033\uff9f\034\uff9f\040\uff9f\041\uff9f\043\uff9f" +
    "\045\uff9f\050\uff9f\051\uff9f\054\uff9f\055\uff9f\060\uff9f\061" +
    "\uff9f\062\uff9f\064\uff9f\067\uff9f\071\uff9f\072\uff9f\074\uff9f" +
    "\076\uff9f\077\uff9f\101\uff9f\102\uff9f\103\uff9f\104\uff9f\105" +
    "\uff9f\106\uff9f\107\uff9f\001\002\000\116\004\uffaa\010\uffaa" +
    "\012\uffaa\013\uffaa\015\uffaa\017\uffaa\021\uffaa\022\uffaa\023" +
    "\uffaa\030\uffaa\032\uffaa\033\uffaa\034\uffaa\040\uffaa\041\uffaa" +
    "\043\uffaa\045\uffaa\050\uffaa\051\uffaa\054\uffaa\055\uffaa\060" +
    "\uffaa\061\uffaa\062\uffaa\064\uffaa\067\uffaa\071\uffaa\072\uffaa" +
    "\074\uffaa\076\uffaa\077\uffaa\101\uffaa\102\uffaa\103\uffaa\104" +
    "\uffaa\105\uffaa\106\uffaa\107\uffaa\001\002\000\004\042\u0104" +
    "\001\002\000\116\004\uffa8\010\uffa8\012\uffa8\013\uffa8\015" +
    "\uffa8\017\uffa8\021\uffa8\022\uffa8\023\uffa8\030\uffa8\032\uffa8" +
    "\033\uffa8\034\uffa8\040\uffa8\041\uffa8\043\uffa8\045\uffa8\050" +
    "\uffa8\051\uffa8\054\uffa8\055\uffa8\060\uffa8\061\uffa8\062\uffa8" +
    "\064\uffa8\067\uffa8\071\uffa8\072\uffa8\074\uffa8\076\uffa8\077" +
    "\uffa8\101\uffa8\102\uffa8\103\uffa8\104\uffa8\105\uffa8\106\uffa8" +
    "\107\uffa8\001\002\000\004\066\u0103\001\002\000\004\062" +
    "\u0102\001\002\000\004\045\376\001\002\000\116\004\uffa6" +
    "\010\uffa6\012\uffa6\013\uffa6\015\uffa6\017\uffa6\021\uffa6\022" +
    "\uffa6\023\uffa6\030\uffa6\032\uffa6\033\uffa6\034\uffa6\040\uffa6" +
    "\041\uffa6\043\uffa6\045\uffa6\050\uffa6\051\uffa6\054\uffa6\055" +
    "\uffa6\060\uffa6\061\uffa6\062\uffa6\064\uffa6\067\uffa6\071\uffa6" +
    "\072\uffa6\074\uffa6\076\uffa6\077\uffa6\101\uffa6\102\uffa6\103" +
    "\uffa6\104\uffa6\105\uffa6\106\uffa6\107\uffa6\001\002\000\116" +
    "\004\uffac\010\uffac\012\uffac\013\uffac\015\uffac\017\uffac\021" +
    "\uffac\022\uffac\023\uffac\030\uffac\032\uffac\033\uffac\034\uffac" +
    "\040\uffac\041\uffac\043\uffac\045\uffac\050\uffac\051\uffac\054" +
    "\uffac\055\uffac\060\uffac\061\uffac\062\uffac\064\uffac\067\uffac" +
    "\071\uffac\072\uffac\074\uffac\076\uffac\077\uffac\101\uffac\102" +
    "\uffac\103\uffac\104\uffac\105\uffac\106\uffac\107\uffac\001\002" +
    "\000\116\004\uffae\010\uffae\012\uffae\013\uffae\015\uffae\017" +
    "\uffae\021\uffae\022\uffae\023\uffae\030\uffae\032\uffae\033\uffae" +
    "\034\uffae\040\uffae\041\uffae\043\uffae\045\uffae\050\uffae\051" +
    "\uffae\054\uffae\055\uffae\060\uffae\061\uffae\062\uffae\064\uffae" +
    "\067\uffae\071\uffae\072\uffae\074\uffae\076\uffae\077\uffae\101" +
    "\uffae\102\uffae\103\uffae\104\uffae\105\uffae\106\uffae\107\uffae" +
    "\001\002\000\004\066\375\001\002\000\116\004\uffab\010" +
    "\uffab\012\uffab\013\uffab\015\uffab\017\uffab\021\uffab\022\uffab" +
    "\023\uffab\030\uffab\032\uffab\033\uffab\034\uffab\040\uffab\041" +
    "\uffab\043\uffab\045\uffab\050\uffab\051\uffab\054\uffab\055\uffab" +
    "\060\uffab\061\uffab\062\uffab\064\uffab\067\uffab\071\uffab\072" +
    "\uffab\074\uffab\076\uffab\077\uffab\101\uffab\102\uffab\103\uffab" +
    "\104\uffab\105\uffab\106\uffab\107\uffab\001\002\000\004\045" +
    "\363\001\002\000\116\004\uffa4\010\uffa4\012\uffa4\013\uffa4" +
    "\015\uffa4\017\uffa4\021\uffa4\022\uffa4\023\uffa4\030\uffa4\032" +
    "\uffa4\033\uffa4\034\uffa4\040\uffa4\041\uffa4\043\uffa4\045\uffa4" +
    "\050\uffa4\051\uffa4\054\uffa4\055\uffa4\060\uffa4\061\uffa4\062" +
    "\uffa4\064\uffa4\067\uffa4\071\uffa4\072\uffa4\074\uffa4\076\uffa4" +
    "\077\uffa4\101\uffa4\102\uffa4\103\uffa4\104\uffa4\105\uffa4\106" +
    "\uffa4\107\uffa4\001\002\000\046\004\070\017\077\032\064" +
    "\045\072\050\063\051\073\054\060\055\100\060\075\061" +
    "\062\067\066\071\101\074\057\076\052\103\076\104\061" +
    "\105\044\107\067\001\002\000\116\004\uff9e\010\uff9e\012" +
    "\uff9e\013\uff9e\015\uff9e\017\uff9e\021\uff9e\022\uff9e\023\uff9e" +
    "\030\uff9e\032\uff9e\033\uff9e\034\uff9e\040\uff9e\041\uff9e\043" +
    "\uff9e\045\uff9e\050\uff9e\051\uff9e\054\uff9e\055\uff9e\060\uff9e" +
    "\061\uff9e\062\uff9e\064\uff9e\067\uff9e\071\uff9e\072\uff9e\074" +
    "\uff9e\076\uff9e\077\uff9e\101\uff9e\102\uff9e\103\uff9e\104\uff9e" +
    "\105\uff9e\106\uff9e\107\uff9e\001\002\000\116\004\uffa5\010" +
    "\uffa5\012\uffa5\013\uffa5\015\uffa5\017\uffa5\021\uffa5\022\uffa5" +
    "\023\uffa5\030\uffa5\032\uffa5\033\uffa5\034\uffa5\040\uffa5\041" +
    "\uffa5\043\uffa5\045\uffa5\050\uffa5\051\uffa5\054\uffa5\055\uffa5" +
    "\060\uffa5\061\uffa5\062\uffa5\064\uffa5\067\uffa5\071\uffa5\072" +
    "\uffa5\074\uffa5\076\uffa5\077\uffa5\101\uffa5\102\uffa5\103\uffa5" +
    "\104\uffa5\105\uffa5\106\uffa5\107\uffa5\001\002\000\004\043" +
    "\332\001\002\000\120\004\uff8d\010\uff8d\012\uff8d\013\uff8d" +
    "\015\uff8d\017\uff8d\021\uff8d\022\uff8d\023\uff8d\025\361\030" +
    "\uff8d\032\uff8d\033\uff8d\034\uff8d\040\uff8d\041\uff8d\043\uff8d" +
    "\045\uff8d\050\uff8d\051\uff8d\054\uff8d\055\uff8d\060\uff8d\061" +
    "\uff8d\062\uff8d\064\uff8d\067\uff8d\071\uff8d\072\uff8d\074\uff8d" +
    "\076\uff8d\077\uff8d\101\uff8d\102\uff8d\103\uff8d\104\uff8d\105" +
    "\uff8d\106\uff8d\107\uff8d\001\002\000\116\004\uff8f\010\uff8f" +
    "\012\uff8f\013\uff8f\015\uff8f\017\uff8f\021\uff8f\022\uff8f\023" +
    "\uff8f\030\uff8f\032\uff8f\033\uff8f\034\uff8f\040\uff8f\041\uff8f" +
    "\043\uff8f\045\uff8f\050\uff8f\051\uff8f\054\uff8f\055\uff8f\060" +
    "\uff8f\061\uff8f\062\uff8f\064\uff8f\067\uff8f\071\uff8f\072\uff8f" +
    "\074\uff8f\076\uff8f\077\uff8f\101\uff8f\102\uff8f\103\uff8f\104" +
    "\uff8f\105\uff8f\106\uff8f\107\uff8f\001\002\000\004\043\332" +
    "\001\002\000\116\004\uff8e\010\uff8e\012\uff8e\013\uff8e\015" +
    "\uff8e\017\uff8e\021\uff8e\022\uff8e\023\uff8e\030\uff8e\032\uff8e" +
    "\033\uff8e\034\uff8e\040\uff8e\041\uff8e\043\uff8e\045\uff8e\050" +
    "\uff8e\051\uff8e\054\uff8e\055\uff8e\060\uff8e\061\uff8e\062\uff8e" +
    "\064\uff8e\067\uff8e\071\uff8e\072\uff8e\074\uff8e\076\uff8e\077" +
    "\uff8e\101\uff8e\102\uff8e\103\uff8e\104\uff8e\105\uff8e\106\uff8e" +
    "\107\uff8e\001\002\000\012\012\032\033\035\041\036\106" +
    "\031\001\002\000\006\004\365\107\uff97\001\002\000\004" +
    "\107\uff98\001\002\000\004\107\367\001\002\000\004\016" +
    "\370\001\002\000\046\004\070\017\077\032\064\045\072" +
    "\050\063\051\073\054\060\055\100\060\075\061\062\067" +
    "\066\071\101\074\057\076\052\103\076\104\061\105\044" +
    "\107\067\001\002\000\004\065\372\001\002\000\004\043" +
    "\uff8b\001\002\000\004\043\332\001\002\000\116\004\uff8a" +
    "\010\uff8a\012\uff8a\013\uff8a\015\uff8a\017\uff8a\021\uff8a\022" +
    "\uff8a\023\uff8a\030\uff8a\032\uff8a\033\uff8a\034\uff8a\040\uff8a" +
    "\041\uff8a\043\uff8a\045\uff8a\050\uff8a\051\uff8a\054\uff8a\055" +
    "\uff8a\060\uff8a\061\uff8a\062\uff8a\064\uff8a\067\uff8a\071\uff8a" +
    "\072\uff8a\074\uff8a\076\uff8a\077\uff8a\101\uff8a\102\uff8a\103" +
    "\uff8a\104\uff8a\105\uff8a\106\uff8a\107\uff8a\001\002\000\116" +
    "\004\uff89\010\uff89\012\uff89\013\uff89\015\uff89\017\uff89\021" +
    "\uff89\022\uff89\023\uff89\030\uff89\032\uff89\033\uff89\034\uff89" +
    "\040\uff89\041\uff89\043\uff89\045\uff89\050\uff89\051\uff89\054" +
    "\uff89\055\uff89\060\uff89\061\uff89\062\uff89\064\uff89\067\uff89" +
    "\071\uff89\072\uff89\074\uff89\076\uff89\077\uff89\101\uff89\102" +
    "\uff89\103\uff89\104\uff89\105\uff89\106\uff89\107\uff89\001\002" +
    "\000\046\004\070\017\077\032\064\045\072\050\063\051" +
    "\073\054\060\055\100\060\075\061\062\067\066\071\101" +
    "\074\057\076\052\103\076\104\061\105\044\107\067\001" +
    "\002\000\004\065\u0100\001\002\000\004\066\u0101\001\002" +
    "\000\116\004\uff87\010\uff87\012\uff87\013\uff87\015\uff87\017" +
    "\uff87\021\uff87\022\uff87\023\uff87\030\uff87\032\uff87\033\uff87" +
    "\034\uff87\040\uff87\041\uff87\043\uff87\045\uff87\050\uff87\051" +
    "\uff87\054\uff87\055\uff87\060\uff87\061\uff87\062\uff87\064\uff87" +
    "\067\uff87\071\uff87\072\uff87\074\uff87\076\uff87\077\uff87\101" +
    "\uff87\102\uff87\103\uff87\104\uff87\105\uff87\106\uff87\107\uff87" +
    "\001\002\000\012\035\uffd7\062\uffd7\075\uffd7\106\uffd7\001" +
    "\002\000\116\004\uffa9\010\uffa9\012\uffa9\013\uffa9\015\uffa9" +
    "\017\uffa9\021\uffa9\022\uffa9\023\uffa9\030\uffa9\032\uffa9\033" +
    "\uffa9\034\uffa9\040\uffa9\041\uffa9\043\uffa9\045\uffa9\050\uffa9" +
    "\051\uffa9\054\uffa9\055\uffa9\060\uffa9\061\uffa9\062\uffa9\064" +
    "\uffa9\067\uffa9\071\uffa9\072\uffa9\074\uffa9\076\uffa9\077\uffa9" +
    "\101\uffa9\102\uffa9\103\uffa9\104\uffa9\105\uffa9\106\uffa9\107" +
    "\uffa9\001\002\000\046\004\070\017\077\032\064\045\072" +
    "\050\063\051\073\054\060\055\100\060\075\061\062\067" +
    "\066\071\101\074\057\076\052\103\076\104\061\105\044" +
    "\107\067\001\002\000\004\066\u0106\001\002\000\116\004" +
    "\uff84\010\uff84\012\uff84\013\uff84\015\uff84\017\uff84\021\uff84" +
    "\022\uff84\023\uff84\030\uff84\032\uff84\033\uff84\034\uff84\040" +
    "\uff84\041\uff84\043\uff84\045\uff84\050\uff84\051\uff84\054\uff84" +
    "\055\uff84\060\uff84\061\uff84\062\uff84\064\uff84\067\uff84\071" +
    "\uff84\072\uff84\074\uff84\076\uff84\077\uff84\101\uff84\102\uff84" +
    "\103\uff84\104\uff84\105\uff84\106\uff84\107\uff84\001\002\000" +
    "\116\004\uffad\010\uffad\012\uffad\013\uffad\015\uffad\017\uffad" +
    "\021\uffad\022\uffad\023\uffad\030\uffad\032\uffad\033\uffad\034" +
    "\uffad\040\uffad\041\uffad\043\uffad\045\uffad\050\uffad\051\uffad" +
    "\054\uffad\055\uffad\060\uffad\061\uffad\062\uffad\064\uffad\067" +
    "\uffad\071\uffad\072\uffad\074\uffad\076\uffad\077\uffad\101\uffad" +
    "\102\uffad\103\uffad\104\uffad\105\uffad\106\uffad\107\uffad\001" +
    "\002\000\006\016\225\066\uff91\001\002\000\004\066\u010a" +
    "\001\002\000\116\004\uff94\010\uff94\012\uff94\013\uff94\015" +
    "\uff94\017\uff94\021\uff94\022\uff94\023\uff94\030\uff94\032\uff94" +
    "\033\uff94\034\uff94\040\uff94\041\uff94\043\uff94\045\uff94\050" +
    "\uff94\051\uff94\054\uff94\055\uff94\060\uff94\061\uff94\062\uff94" +
    "\064\uff94\067\uff94\071\uff94\072\uff94\074\uff94\076\uff94\077" +
    "\uff94\101\uff94\102\uff94\103\uff94\104\uff94\105\uff94\106\uff94" +
    "\107\uff94\001\002\000\116\004\070\010\uffe7\012\uffe7\013" +
    "\347\015\337\017\077\021\uffe7\022\323\023\325\030\343" +
    "\032\064\033\uffe7\034\351\040\353\041\uffe7\043\332\045" +
    "\072\050\063\051\073\054\060\055\100\060\075\061\062" +
    "\062\uffaf\064\327\067\066\071\101\072\015\074\057\076" +
    "\052\077\322\101\333\102\324\103\076\104\061\105\044" +
    "\106\uffe7\107\067\001\002\000\004\062\uffb2\001\002\000" +
    "\004\062\u010e\001\002\000\120\004\uffb1\010\uffb1\012\uffb1" +
    "\013\uffb1\015\uffb1\017\uffb1\021\uffb1\022\uffb1\023\uffb1\025" +
    "\uffb1\030\uffb1\032\uffb1\033\uffb1\034\uffb1\040\uffb1\041\uffb1" +
    "\043\uffb1\045\uffb1\050\uffb1\051\uffb1\054\uffb1\055\uffb1\060" +
    "\uffb1\061\uffb1\062\uffb1\064\uffb1\067\uffb1\071\uffb1\072\uffb1" +
    "\074\uffb1\076\uffb1\077\uffb1\101\uffb1\102\uffb1\103\uffb1\104" +
    "\uffb1\105\uffb1\106\uffb1\107\uffb1\001\002\000\004\066\u0111" +
    "\001\002\000\116\004\uff86\010\uff86\012\uff86\013\uff86\015" +
    "\uff86\017\uff86\021\uff86\022\uff86\023\uff86\030\uff86\032\uff86" +
    "\033\uff86\034\uff86\040\uff86\041\uff86\043\uff86\045\uff86\050" +
    "\uff86\051\uff86\054\uff86\055\uff86\060\uff86\061\uff86\062\uff86" +
    "\064\uff86\067\uff86\071\uff86\072\uff86\074\uff86\076\uff86\077" +
    "\uff86\101\uff86\102\uff86\103\uff86\104\uff86\105\uff86\106\uff86" +
    "\107\uff86\001\002\000\116\004\uff85\010\uff85\012\uff85\013" +
    "\uff85\015\uff85\017\uff85\021\uff85\022\uff85\023\uff85\030\uff85" +
    "\032\uff85\033\uff85\034\uff85\040\uff85\041\uff85\043\uff85\045" +
    "\uff85\050\uff85\051\uff85\054\uff85\055\uff85\060\uff85\061\uff85" +
    "\062\uff85\064\uff85\067\uff85\071\uff85\072\uff85\074\uff85\076" +
    "\uff85\077\uff85\101\uff85\102\uff85\103\uff85\104\uff85\105\uff85" +
    "\106\uff85\107\uff85\001\002\000\050\004\070\017\077\026" +
    "\u0116\032\064\045\072\050\063\051\073\054\060\055\100" +
    "\060\075\061\062\067\066\071\101\074\057\076\052\103" +
    "\076\104\061\105\044\107\067\001\002\000\006\057\uff80" +
    "\066\uff80\001\002\000\006\057\uff82\066\uff82\001\002\000" +
    "\006\057\u0117\066\u0118\001\002\000\006\057\uff7f\066\uff7f" +
    "\001\002\000\050\004\070\017\077\026\u0116\032\064\045" +
    "\072\050\063\051\073\054\060\055\100\060\075\061\062" +
    "\067\066\071\101\074\057\076\052\103\076\104\061\105" +
    "\044\107\067\001\002\000\116\004\uff83\010\uff83\012\uff83" +
    "\013\uff83\015\uff83\017\uff83\021\uff83\022\uff83\023\uff83\030" +
    "\uff83\032\uff83\033\uff83\034\uff83\040\uff83\041\uff83\043\uff83" +
    "\045\uff83\050\uff83\051\uff83\054\uff83\055\uff83\060\uff83\061" +
    "\uff83\062\uff83\064\uff83\067\uff83\071\uff83\072\uff83\074\uff83" +
    "\076\uff83\077\uff83\101\uff83\102\uff83\103\uff83\104\uff83\105" +
    "\uff83\106\uff83\107\uff83\001\002\000\006\057\uff81\066\uff81" +
    "\001\002\000\004\066\u011b\001\002\000\116\004\uff93\010" +
    "\uff93\012\uff93\013\uff93\015\uff93\017\uff93\021\uff93\022\uff93" +
    "\023\uff93\030\uff93\032\uff93\033\uff93\034\uff93\040\uff93\041" +
    "\uff93\043\uff93\045\uff93\050\uff93\051\uff93\054\uff93\055\uff93" +
    "\060\uff93\061\uff93\062\uff93\064\uff93\067\uff93\071\uff93\072" +
    "\uff93\074\uff93\076\uff93\077\uff93\101\uff93\102\uff93\103\uff93" +
    "\104\uff93\105\uff93\106\uff93\107\uff93\001\002\000\116\004" +
    "\uff88\010\uff88\012\uff88\013\uff88\015\uff88\017\uff88\021\uff88" +
    "\022\uff88\023\uff88\030\uff88\032\uff88\033\uff88\034\uff88\040" +
    "\uff88\041\uff88\043\uff88\045\uff88\050\uff88\051\uff88\054\uff88" +
    "\055\uff88\060\uff88\061\uff88\062\uff88\064\uff88\067\uff88\071" +
    "\uff88\072\uff88\074\uff88\076\uff88\077\uff88\101\uff88\102\uff88" +
    "\103\uff88\104\uff88\105\uff88\106\uff88\107\uff88\001\002\000" +
    "\004\043\332\001\002\000\116\004\uff8c\010\uff8c\012\uff8c" +
    "\013\uff8c\015\uff8c\017\uff8c\021\uff8c\022\uff8c\023\uff8c\030" +
    "\uff8c\032\uff8c\033\uff8c\034\uff8c\040\uff8c\041\uff8c\043\uff8c" +
    "\045\uff8c\050\uff8c\051\uff8c\054\uff8c\055\uff8c\060\uff8c\061" +
    "\uff8c\062\uff8c\064\uff8c\067\uff8c\071\uff8c\072\uff8c\074\uff8c" +
    "\076\uff8c\077\uff8c\101\uff8c\102\uff8c\103\uff8c\104\uff8c\105" +
    "\uff8c\106\uff8c\107\uff8c\001\002\000\012\012\032\033\035" +
    "\041\036\106\031\001\002\000\006\020\uff9a\065\uff9a\001" +
    "\002\000\004\107\u0122\001\002\000\010\020\uffb7\044\126" +
    "\065\uffb7\001\002\000\006\020\uff99\065\uff99\001\002\000" +
    "\004\045\uffd6\001\002\000\004\045\u0126\001\002\000\004" +
    "\065\u0127\001\002\000\004\043\u0128\001\002\000\116\004" +
    "\070\010\uffe7\012\uffe7\013\347\015\337\017\077\021\uffe7" +
    "\022\323\023\325\030\343\032\064\033\uffe7\034\351\040" +
    "\353\041\uffe7\043\332\045\072\050\063\051\073\054\060" +
    "\055\100\060\075\061\062\062\uffaf\064\327\067\066\071" +
    "\101\072\015\074\057\076\052\077\322\101\333\102\324" +
    "\103\076\104\061\105\044\106\uffe7\107\067\001\002\000" +
    "\004\062\u012a\001\002\000\012\035\uffd5\062\uffd5\075\uffd5" +
    "\106\uffd5\001\002\000\014\012\032\033\035\041\036\100" +
    "\u012e\106\031\001\002\000\006\004\uffbf\107\uffbf\001\002" +
    "\000\006\004\365\107\uff97\001\002\000\006\004\uffbe\107" +
    "\uffbe\001\002\000\004\107\u0130\001\002\000\004\045\uffcf" +
    "\001\002\000\004\045\u0132\001\002\000\014\012\032\033" +
    "\035\041\036\065\uff9c\106\031\001\002\000\004\065\u0134" +
    "\001\002\000\004\043\uffce\001\002\000\004\043\u0136\001" +
    "\002\000\116\004\070\010\uffe7\012\uffe7\013\347\015\337" +
    "\017\077\021\uffe7\022\323\023\325\030\343\032\064\033" +
    "\uffe7\034\351\040\353\041\uffe7\043\332\045\072\050\063" +
    "\051\073\054\060\055\100\060\075\061\062\062\uffaf\064" +
    "\327\067\066\071\101\072\015\074\057\076\052\077\322" +
    "\101\333\102\324\103\076\104\061\105\044\106\uffe7\107" +
    "\067\001\002\000\004\062\uffcd\001\002\000\004\062\u0139" +
    "\001\002\000\032\002\uffcc\010\uffcc\012\uffcc\021\uffcc\031" +
    "\uffcc\033\uffcc\035\uffcc\041\uffcc\062\uffcc\072\uffcc\073\uffcc" +
    "\106\uffcc\001\002\000\004\016\u0140\001\002\000\004\107" +
    "\u013c\001\002\000\006\044\126\066\uffb7\001\002\000\004" +
    "\066\ufff4\001\002\000\004\066\u013f\001\002\000\030\002" +
    "\ufff3\010\ufff3\012\ufff3\021\ufff3\031\ufff3\033\ufff3\035\ufff3" +
    "\041\ufff3\072\ufff3\073\ufff3\106\ufff3\001\002\000\014\012" +
    "\032\033\035\041\036\100\u012e\106\031\001\002\000\004" +
    "\107\u0142\001\002\000\004\045\uffcb\001\002\000\004\045" +
    "\u0144\001\002\000\014\012\032\033\035\041\036\065\uff9c" +
    "\106\031\001\002\000\004\065\u0146\001\002\000\004\066" +
    "\uffca\001\002\000\004\066\u0148\001\002\000\030\002\uffc9" +
    "\010\uffc9\012\uffc9\021\uffc9\031\uffc9\033\uffc9\035\uffc9\041" +
    "\uffc9\072\uffc9\073\uffc9\106\uffc9\001\002\000\004\002\uffff" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0147\000\006\003\003\122\004\001\001\000\002\001" +
    "\001\000\026\004\021\005\017\006\015\007\016\010\005" +
    "\011\020\012\013\013\022\014\012\015\007\001\001\000" +
    "\002\001\001\000\006\112\025\113\u013a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\112" +
    "\025\113\024\114\032\116\026\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\006\023\007\016\010\005\011\020\012\013\013\022" +
    "\014\012\015\007\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\062\250\063\251\064\114\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\063\113\064\114\001\001\000\004\112\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\054\053\056" +
    "\073\070\070\100\064\101\055\102\054\103\052\104\047" +
    "\105\046\106\044\107\042\110\050\111\045\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\073\170\001\001" +
    "\000\002\001\001\000\004\072\163\001\001\000\004\075" +
    "\156\001\001\000\004\070\176\001\001\000\002\001\001" +
    "\000\004\077\147\001\001\000\004\130\172\001\001\000" +
    "\004\076\145\001\001\000\004\074\141\001\001\000\002" +
    "\001\001\000\014\056\073\070\070\107\136\110\050\111" +
    "\045\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\056\073\070\070\107\117" +
    "\110\050\111\045\001\001\000\014\056\073\070\070\107" +
    "\116\110\050\111\045\001\001\000\042\056\073\070\070" +
    "\100\106\101\055\102\054\103\052\104\047\105\046\106" +
    "\044\107\042\110\050\111\045\112\025\113\024\114\104" +
    "\116\105\001\001\000\002\001\001\000\014\056\073\070" +
    "\070\107\103\110\050\111\045\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\056\073\070\070\107\101\110\050\111\045\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\063\113\064\114\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\056\073\070\070\107" +
    "\111\110\050\111\045\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\064\115\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\056\073\070\070\107\121\110\050\111\045\112\025\113" +
    "\024\114\122\115\123\116\124\001\001\000\002\001\001" +
    "\000\006\063\113\064\114\001\001\000\010\065\126\066" +
    "\127\067\130\001\001\000\002\001\001\000\034\054\133" +
    "\056\073\070\070\100\064\101\055\102\054\103\052\104" +
    "\047\105\046\106\044\107\042\110\050\111\045\001\001" +
    "\000\002\001\001\000\004\067\131\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\056\073\070\070" +
    "\102\143\103\052\104\047\105\046\106\044\107\142\110" +
    "\050\111\045\001\001\000\002\001\001\000\004\076\145" +
    "\001\001\000\002\001\001\000\024\056\073\070\070\103" +
    "\146\104\047\105\046\106\044\107\142\110\050\111\045" +
    "\001\001\000\004\077\147\001\001\000\022\056\073\070" +
    "\070\104\152\105\046\106\044\107\142\110\050\111\045" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\075" +
    "\156\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\056\073\070\070\105\160\106\044\107" +
    "\142\110\050\111\045\001\001\000\002\001\001\000\004" +
    "\072\163\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\056\073\070\070\106\164\107\142\110\050\111\045" +
    "\001\001\000\004\073\170\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\056\073\070\070" +
    "\107\171\110\050\111\045\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\032\056\073\070\070" +
    "\100\211\101\055\102\054\103\052\104\047\105\046\106" +
    "\044\107\042\110\050\111\045\001\001\000\036\035\205" +
    "\055\204\056\073\070\070\100\203\101\055\102\054\103" +
    "\052\104\047\105\046\106\044\107\042\110\050\111\045" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\032\056\073\070\070\100\210\101\055\102\054\103\052" +
    "\104\047\105\046\106\044\107\042\110\050\111\045\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\032\056\073\070\070\100\214\101\055\102\054\103" +
    "\052\104\047\105\046\106\044\107\042\110\050\111\045" +
    "\001\001\000\002\001\001\000\002\001\001\000\034\054" +
    "\217\056\073\070\070\100\064\101\055\102\054\103\052" +
    "\104\047\105\046\106\044\107\042\110\050\111\045\001" +
    "\001\000\004\127\220\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\065\223\066\127\067\130\001\001\000" +
    "\006\060\226\061\225\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\126\227\001\001\000\002\001\001\000" +
    "\002\001\001\000\036\035\232\055\204\056\073\070\070" +
    "\100\203\101\055\102\054\103\052\104\047\105\046\106" +
    "\044\107\042\110\050\111\045\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\032\056\073\070" +
    "\070\100\236\101\055\102\054\103\052\104\047\105\046" +
    "\106\044\107\042\110\050\111\045\001\001\000\004\125" +
    "\237\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\065\242\066\127\067\130\001\001\000\004\057\243\001" +
    "\001\000\004\124\246\001\001\000\032\056\073\070\070" +
    "\100\245\101\055\102\054\103\052\104\047\105\046\106" +
    "\044\107\042\110\050\111\045\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\064\115\001\001\000\002\001\001\000\004\131\254" +
    "\001\001\000\016\021\255\022\257\112\025\113\024\114" +
    "\104\116\256\001\001\000\026\016\271\017\263\022\265" +
    "\023\272\024\267\025\270\112\025\113\024\114\104\116" +
    "\256\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\065\261\066\127\067\130\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\134\306\001\001\000\010\016\271\017" +
    "\263\025\305\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\132\273\001\001\000\012\007\276\026\277\027" +
    "\275\030\274\001\001\000\002\001\001\000\006\007\276" +
    "\030\303\001\001\000\002\001\001\000\004\133\300\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\134\306\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\071\312\112\025\113\024" +
    "\114\122\115\310\116\124\120\313\121\311\001\001\000" +
    "\004\020\u0120\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\135\315\001\001\000\002\001" +
    "\001\000\076\012\344\013\347\014\012\031\341\032\333" +
    "\033\345\034\335\036\337\040\334\041\353\042\343\043" +
    "\330\044\354\045\351\046\320\047\317\050\325\051\327" +
    "\056\073\070\070\100\340\101\055\102\054\103\052\104" +
    "\047\105\046\106\044\107\042\110\050\111\045\001\001" +
    "\000\002\001\001\000\002\001\001\000\032\056\073\070" +
    "\070\100\u011c\101\055\102\054\103\052\104\047\105\046" +
    "\106\044\107\042\110\050\111\045\001\001\000\002\001" +
    "\001\000\014\056\073\070\070\107\u0119\110\050\111\045" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\056" +
    "\073\070\070\100\u010e\101\055\102\054\103\052\104\047" +
    "\105\046\106\044\107\042\110\050\111\045\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\144\u010a\001\001" +
    "\000\014\056\073\070\070\107\u0107\110\050\111\045\001" +
    "\001\000\072\012\344\013\347\014\012\033\u0106\034\335" +
    "\036\337\040\334\041\353\042\343\043\330\044\354\045" +
    "\351\046\320\047\317\050\325\051\327\056\073\070\070" +
    "\100\340\101\055\102\054\103\052\104\047\105\046\106" +
    "\044\107\042\110\050\111\045\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\032\056\073\070\070\100\355\101\055\102\054\103" +
    "\052\104\047\105\046\106\044\107\042\110\050\111\045" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\356\001\001\000\004\037\357\001\001\000\002\001\001" +
    "\000\004\034\361\001\001\000\002\001\001\000\014\112" +
    "\025\113\024\114\122\115\363\116\124\001\001\000\004" +
    "\020\365\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\056\073\070\070\100\370\101\055" +
    "\102\054\103\052\104\047\105\046\106\044\107\042\110" +
    "\050\111\045\001\001\000\002\001\001\000\004\146\372" +
    "\001\001\000\004\034\373\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\056\073\070\070\100\376\101\055" +
    "\102\054\103\052\104\047\105\046\106\044\107\042\110" +
    "\050\111\045\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\056\073\070\070\107\u0104\110\050\111\045\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\060\u0108\061\225\001\001\000\002\001\001\000\002" +
    "\001\001\000\076\012\344\013\347\014\012\031\u010b\032" +
    "\333\033\345\034\335\036\337\040\334\041\353\042\343" +
    "\043\330\044\354\045\351\046\320\047\317\050\325\051" +
    "\327\056\073\070\070\100\340\101\055\102\054\103\052" +
    "\104\047\105\046\106\044\107\042\110\050\111\045\001" +
    "\001\000\004\145\u010c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\036\052\u0114\053\u0113\056\073\070\070\100\u0112" +
    "\101\055\102\054\103\052\104\047\105\046\106\044\107" +
    "\042\110\050\111\045\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\034\053" +
    "\u0118\056\073\070\070\100\u0112\101\055\102\054\103\052" +
    "\104\047\105\046\106\044\107\042\110\050\111\045\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\034\u011d\001" +
    "\001\000\002\001\001\000\016\071\u011f\112\025\113\024" +
    "\114\122\115\310\116\124\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\065\u0122\066\127\067\130\001\001" +
    "\000\002\001\001\000\004\136\u0124\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\076\012\344" +
    "\013\347\014\012\031\u0128\032\333\033\345\034\335\036" +
    "\337\040\334\041\353\042\343\043\330\044\354\045\351" +
    "\046\320\047\317\050\325\051\327\056\073\070\070\100" +
    "\340\101\055\102\054\103\052\104\047\105\046\106\044" +
    "\107\042\110\050\111\045\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\112\025\113\024\114\122\115\u012b" +
    "\116\124\117\u012c\001\001\000\002\001\001\000\004\020" +
    "\u012e\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\137\u0130\001\001\000\002\001\001\000\022\071\312\112" +
    "\025\113\024\114\122\115\310\116\124\120\u0132\121\311" +
    "\001\001\000\002\001\001\000\004\140\u0134\001\001\000" +
    "\002\001\001\000\076\012\344\013\347\014\012\031\u0136" +
    "\032\333\033\345\034\335\036\337\040\334\041\353\042" +
    "\343\043\330\044\354\045\351\046\320\047\317\050\325" +
    "\051\327\056\073\070\070\100\340\101\055\102\054\103" +
    "\052\104\047\105\046\106\044\107\042\110\050\111\045" +
    "\001\001\000\004\141\u0137\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\065\u013c\066\127\067\130\001\001\000\004\123\u013d\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\112\025" +
    "\113\024\114\122\115\u012b\116\124\117\u0140\001\001\000" +
    "\002\001\001\000\004\142\u0142\001\001\000\002\001\001" +
    "\000\022\071\312\112\025\113\024\114\122\115\310\116" +
    "\124\120\u0144\121\311\001\001\000\002\001\001\000\004" +
    "\143\u0146\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 2;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 return new Symbol (sym.EOF); 
    }



}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // UnarySign ::= T_MINUS 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(44/*UnarySign*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // UnarySign ::= T_PLUS 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(44/*UnarySign*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // Designator3 ::= T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator3_ID (_1, "local");
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // Designator3 ::= T_COLONCOLON T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator3_ID (_1, "global");
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // Designator3 ::= T_THIS 
            {
              STO RESULT = null;
		
                        RESULT = new ExprSTO ("this");              // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // Designator3 ::= T_NULLPTR 
            {
              STO RESULT = null;
		
                        RESULT = new ExprSTO ("nullptr", null);     // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // Designator3 ::= T_FALSE 
            {
              STO RESULT = null;
		
                        RESULT = new ConstSTO ("false", null, 0);   // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // Designator3 ::= T_TRUE 
            {
              STO RESULT = null;
		
                        RESULT = new ConstSTO ("true", null, 1);    // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // Designator3 ::= T_STR_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Designator3 ::= T_FLOAT_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1, new FloatType(), Float.parseFloat(_1));
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // Designator3 ::= T_INT_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1, new IntType(), Integer.parseInt(_1));
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // Designator3 ::= T_LPAREN Expr T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // Designator2 ::= Designator3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // Designator2 ::= Designator2 T_LPAREN OptExprList T_RPAREN 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
                        ((MyParser) parser).DoFuncCall (_1);
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // Designator2 ::= Designator2 IncDecOp 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Designator2 ::= Designator2 T_ARROW T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Designator2 ::= Designator2 T_LBRACKET Expr T_RBRACKET 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator2_Array (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Designator2 ::= Designator2 T_DOT T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator2_Dot (_1, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // Designator ::= Designator2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // Designator ::= IncDecOp Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // Designator ::= T_LPAREN DecoratedType T_RPAREN Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Designator ::= T_SIZEOF T_LPAREN Type OptArrayList T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = new ConstSTO("sizeof type - fix me", null, 0);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Designator ::= T_SIZEOF T_LPAREN Designator T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = new ConstSTO("sizeof variable - fix me", null, 0);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Designator ::= T_NOT Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoUnaryExpr (new NotOp(), _1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Designator ::= UnarySign Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // Designator ::= T_AMPERSAND Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // Designator ::= T_STAR Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // IncDecOp ::= T_MINUSMINUS 
            {
              String RESULT = null;
		
                        RESULT = "--";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(54/*IncDecOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // IncDecOp ::= T_PLUSPLUS 
            {
              String RESULT = null;
		
                        RESULT = "++";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(54/*IncDecOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // BitwiseOp ::= T_AMPERSAND 
            {
              Operator RESULT = null;
		
                        RESULT = new BwAndOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(60/*BitwiseOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // BooleanOp ::= T_OR 
            {
              Operator RESULT = null;
		
                        RESULT = new OrOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*BooleanOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // BooleanOp ::= T_AND 
            {
              Operator RESULT = null;
		
                        RESULT = new AndOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*BooleanOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // MulOp ::= T_MOD 
            {
              Operator RESULT = null;
		
                        RESULT = new ModOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // MulOp ::= T_SLASH 
            {
              Operator RESULT = null;
		
                        RESULT = new SlashOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // MulOp ::= T_STAR 
            {
              Operator RESULT = null;
		
                        RESULT = new StarOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // AddOp ::= T_MINUS 
            {
              Operator RESULT = null;
		
                        RESULT = new MinusOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*AddOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // AddOp ::= T_PLUS 
            {
              Operator RESULT = null;
		
                        RESULT = new AddOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*AddOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Relation ::= T_GTE 
            {
              Operator RESULT = null;
		
                        RESULT = new GTEOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(59/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Relation ::= T_LTE 
            {
              Operator RESULT = null;
		
                        RESULT = new LTEOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(59/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Relation ::= T_GT 
            {
              Operator RESULT = null;
		
                        RESULT = new GTOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(59/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Relation ::= T_LT 
            {
              Operator RESULT = null;
		
                        RESULT = new LTOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(59/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Equality ::= T_NEQ 
            {
              Operator RESULT = null;
		
                        RESULT = new NEQOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(61/*Equality*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Equality ::= T_EQU 
            {
              Operator RESULT = null;
		
                        RESULT = new EQUOp();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(61/*Equality*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Expr6 ::= Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(68/*Expr6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Expr6 ::= Expr6 MulOp Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Operator _2 = (Operator)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoBinaryExpr (_1, _2, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(68/*Expr6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Expr5 ::= Expr6 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(67/*Expr5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Expr5 ::= Expr5 AddOp Expr6 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Operator _2 = (Operator)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoBinaryExpr (_1, _2, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(67/*Expr5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Expr4 ::= Expr5 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(66/*Expr4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Expr4 ::= Expr4 Relation Expr5 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Operator _2 = (Operator)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoBinaryExpr (_1, _2, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(66/*Expr4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Expr3 ::= Expr4 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(65/*Expr3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Expr3 ::= Expr3 Equality Expr4 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Operator _2 = (Operator)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoBinaryExpr (_1, _2, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(65/*Expr3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Expr2 ::= Expr3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Expr2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Expr2 ::= Expr2 BitwiseOp Expr3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Operator _2 = (Operator)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoBinaryExpr (_1, _2, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Expr2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Expr1 ::= Expr2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Expr1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Expr1 ::= Expr1 BooleanOp Expr2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Operator _2 = (Operator)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoBinaryExpr (_1, _2, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Expr1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Expr ::= Expr1 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Expr ::= Designator T_ASSIGN Expr 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = ((MyParser) parser).DoAssignExpr (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // ExprList ::= ExprList T_COMMA Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(43/*ExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // ExprList ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(43/*ExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // OptExprList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(27/*OptExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // OptExprList ::= ExprList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(27/*OptExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // ConstExpr ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(42/*ConstExpr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // WritePair ::= T_ENDL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(41/*WritePair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // WritePair ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(41/*WritePair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // WritePairList ::= WritePairList T_OSTREAM WritePair 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(40/*WritePairList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // WritePairList ::= WritePair 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(40/*WritePairList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // WriteStmt ::= T_COUT T_OSTREAM WritePairList T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*WriteStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // ReadStmt ::= T_CIN T_ISTREAM Designator T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*ReadStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // ReturnStmt ::= T_RETURN Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(37/*ReturnStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // ReturnStmt ::= T_RETURN T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(37/*ReturnStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // ExitStmt ::= T_EXIT T_LPAREN Expr T_RPAREN T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(36/*ExitStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // ContinueStmt ::= T_CONTINUE T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(35/*ContinueStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // BreakStmt ::= T_BREAK T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(34/*BreakStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // ForeachStmt ::= T_FOREACH T_LPAREN Type OptRef T_ID T_COLON Expr T_RPAREN NT$20 CodeBlock 
            {
              Object RESULT = null;
              // propagate RESULT from NT$20
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
                        ((MyParser) parser).DoBlockClose();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(32/*ForeachStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // NT$20 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

                        ((MyParser) parser).DoBlockOpen();
                        ((MyParser) parser).DoVarDecl (_3, null);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(100/*NT$20*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // WhileStmt ::= T_WHILE Expr CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(33/*WhileStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // OptElse ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*OptElse*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // OptElse ::= T_ELSE CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*OptElse*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // IfStmt ::= T_IF Expr CodeBlock OptElse 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(28/*IfStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // CtorCall ::= T_COLON T_LPAREN OptExprList T_RPAREN 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(47/*CtorCall*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // OptCtorCall ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(46/*OptCtorCall*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // OptCtorCall ::= CtorCall 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(46/*OptCtorCall*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // DeleteStmt ::= T_DELETE Designator T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*DeleteStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // NewStmt ::= T_NEW Designator OptCtorCall T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*NewStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // OptInit ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(45/*OptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // OptInit ::= T_ASSIGN Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(45/*OptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // OptRef ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(14/*OptRef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // OptRef ::= T_AMPERSAND 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(14/*OptRef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // ParamDecl ::= Type OptRef T_ID OptArrayList 
            {
              String RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(55/*ParamDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // ParamList ::= ParamList T_COMMA ParamDecl 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                        RESULT.addElement (_2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(79/*ParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ParamList ::= ParamDecl 
            {
              Vector RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new Vector ();
                        RESULT.addElement (_2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(79/*ParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // OptParamList ::= 
            {
              Vector RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(78/*OptParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // OptParamList ::= ParamList 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(78/*OptParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Stmt ::= DeleteStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Stmt ::= NewStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Stmt ::= WriteStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Stmt ::= ReadStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Stmt ::= ReturnStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Stmt ::= ExitStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Stmt ::= ContinueStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Stmt ::= BreakStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Stmt ::= ForeachStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Stmt ::= WhileStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Stmt ::= IfStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Stmt ::= Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Stmt ::= CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Stmt ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Stmt ::= VarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // StmtList ::= StmtList Stmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*StmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // StmtList ::= Stmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*StmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // OptStmtList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*OptStmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // OptStmtList ::= StmtList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*OptStmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // CodeBlock ::= T_LBRACE NT$18 OptStmtList NT$19 T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$18
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
              // propagate RESULT from NT$19
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(26/*CodeBlock*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // NT$19 ::= 
            {
              Object RESULT = null;
 ((MyParser) parser).DoBlockClose(); 
              CUP$parser$result = new java_cup.runtime.Symbol(99/*NT$19*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // NT$18 ::= 
            {
              Object RESULT = null;
 ((MyParser) parser).DoBlockOpen(); 
              CUP$parser$result = new java_cup.runtime.Symbol(98/*NT$18*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Array ::= T_LBRACKET ConstExpr T_RBRACKET 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(53/*Array*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ArrayList ::= ArrayList Array 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(52/*ArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ArrayList ::= Array 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(52/*ArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // OptArrayList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(51/*OptArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // OptArrayList ::= ArrayList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(51/*OptArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Pointer ::= T_STAR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(50/*Pointer*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // PointerList ::= PointerList Pointer 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(49/*PointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // PointerList ::= Pointer 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(49/*PointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // OptPointerList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(48/*OptPointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // OptPointerList ::= PointerList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(48/*OptPointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ReturnType ::= T_VOID 
            {
              Type RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(77/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ReturnType ::= Type 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(77/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // StructType ::= T_ID_U 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                       RESULT = ((MyParser) parser).DoStructType_ID (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(74/*StructType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // BasicType ::= T_BOOL 
            {
              Type RESULT = null;
		
                        RESULT = new BoolType();  // BoolType
                    
              CUP$parser$result = new java_cup.runtime.Symbol(72/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // BasicType ::= T_FLOAT 
            {
              Type RESULT = null;
		
                        RESULT = new FloatType();  // FloatType
                    
              CUP$parser$result = new java_cup.runtime.Symbol(72/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // BasicType ::= T_INT 
            {
              Type RESULT = null;
		
                        RESULT = new IntType();  // IntType
                    
              CUP$parser$result = new java_cup.runtime.Symbol(72/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // DecoratedBasicType ::= BasicType OptPointerList 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;    // gotta do something here!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(73/*DecoratedBasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // DecoratedType ::= StructType PointerList 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;    // gotta do something here!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(76/*DecoratedType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // DecoratedType ::= DecoratedBasicType 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(76/*DecoratedType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Type ::= StructType 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(75/*Type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Type ::= DecoratedType 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(75/*Type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // FuncDecl ::= T_EXTERN T_FUNCTION T_COLON ReturnType T_ID NT$16 T_LPAREN OptParamList T_RPAREN NT$17 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$16
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
              // propagate RESULT from NT$17
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*FuncDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // NT$17 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_4);
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(97/*NT$17*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // NT$16 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoFuncDecl_1(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(96/*NT$16*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // FuncDef ::= T_FUNCTION T_COLON ReturnType OptRef T_ID NT$13 T_LPAREN OptParamList T_RPAREN NT$14 T_LBRACE OptStmtList NT$15 T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$13
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
              // propagate RESULT from NT$14
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
              // propagate RESULT from NT$15
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*FuncDef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // NT$15 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;

                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(95/*NT$15*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NT$14 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_4);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(94/*NT$14*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // NT$13 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).SaveLineNum ();
                        ((MyParser) parser).DoFuncDecl_1(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(93/*NT$13*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // FieldFuncDecl ::= FuncDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(22/*FieldFuncDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // FieldFuncsList ::= FieldFuncsList FieldFuncDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(21/*FieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // FieldFuncsList ::= FieldFuncDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(21/*FieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // OptFieldFuncsList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*OptFieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // OptFieldFuncsList ::= FieldFuncsList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*OptFieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // DtorDef ::= T_TILDE T_ID_U NT$12 T_LPAREN T_RPAREN T_LBRACE OptStmtList T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$12
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(13/*DtorDef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // NT$12 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).SaveLineNum ();
                        ((MyParser) parser).DoFuncDecl_1("~" + _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(92/*NT$12*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // CtorDef ::= T_ID_U NT$10 T_LPAREN OptParamList T_RPAREN NT$11 T_LBRACE OptStmtList T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$10
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
              // propagate RESULT from NT$11
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(12/*CtorDef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // NT$11 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_4);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(91/*NT$11*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$10 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).SaveLineNum ();
                        ((MyParser) parser).DoFuncDecl_1(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(90/*NT$10*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // CtorDtorDecl ::= DtorDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*CtorDtorDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // CtorDtorDecl ::= CtorDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*CtorDtorDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // CtorDtorList ::= CtorDtorList CtorDtorDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*CtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CtorDtorList ::= CtorDtorDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*CtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // OptCtorDtorList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*OptCtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // OptCtorDtorList ::= CtorDtorList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*OptCtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // FieldVarDecl ::= DecoratedType T_ID OptArrayList T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*FieldVarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // FieldVarsList ::= FieldVarsList FieldVarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(15/*FieldVarsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // FieldVarsList ::= FieldVarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(15/*FieldVarsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // StructdefDecl ::= T_STRUCTDEF T_ID_U T_LBRACE NT$7 FieldVarsList OptCtorDtorList NT$8 OptFieldFuncsList NT$9 T_RBRACE T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$7
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
              // propagate RESULT from NT$8
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
              // propagate RESULT from NT$9
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*StructdefDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NT$9 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;

                        ((MyParser) parser).DoBlockClose();
                        ((MyParser) parser).DoStructdefDecl (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(89/*NT$9*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // NT$8 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;

                        // Put logic here to create default ctor if needed
                    
              CUP$parser$result = new java_cup.runtime.Symbol(88/*NT$8*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$7 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoBlockOpen();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(87/*NT$7*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // OptStatic ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(10/*OptStatic*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // OptStatic ::= T_STATIC 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(10/*OptStatic*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ConstDecl ::= OptStatic T_CONST T_AUTO T_ID T_ASSIGN ConstExpr NT$6 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$6
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NT$6 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoConstDecl (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(86/*NT$6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ConstDecl ::= OptStatic T_CONST BasicType T_ID T_ASSIGN ConstExpr NT$5 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$5
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$5 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoConstDecl (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(85/*NT$5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // VarDecl ::= OptStatic StructType T_ID OptArrayList OptCtorCall NT$4 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object _4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$4 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object _4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoVarDecl (_3, _2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(84/*NT$4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VarDecl ::= OptStatic T_AUTO T_ID T_ASSIGN Expr NT$3 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _5 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$3 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _5 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoVarDecl (_3, null);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(83/*NT$3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VarDecl ::= OptStatic DecoratedType T_ID OptArrayList OptInit NT$2 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object _4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // NT$2 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object _4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoVarDecl (_3, _2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(82/*NT$2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ExternDecl ::= T_EXTERN DecoratedBasicType T_ID OptArrayList NT$1 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object _4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*ExternDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NT$1 ::= 
            {
              Object RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoExternDecl (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(81/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // GlobalDecl ::= FuncDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // GlobalDecl ::= FuncDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // GlobalDecl ::= StructdefDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // GlobalDecl ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // GlobalDecl ::= VarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // GlobalDecl ::= ExternDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // GlobalDecls ::= GlobalDecls GlobalDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*GlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // GlobalDecls ::= GlobalDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*GlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // OptGlobalDecls ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*OptGlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // OptGlobalDecls ::= GlobalDecls 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*OptGlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= NT$0 OptGlobalDecls 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        ((MyParser) parser).DoProgramEnd();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // NT$0 ::= 
            {
              Object RESULT = null;

                        ((MyParser) parser).DoProgramStart();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(80/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

