int intVar = 5;
float floatVar = 5.5;
bool boolVar = true;

const int intConst = 10;
const float floatConst = 99.9;
const bool boolConst = false;


// struct business!
structdef MYS {
    int x;
    int y;
    int x; // check13a_Struct dup id x, error #1
    int z;
    int x; // check13a_Struct dup id x, error #2
    MYS * next; // recursive field – no error – will be tested
    function : void y() {} // check13a_Struct dup id y, error #3
    function : void f( int &x ) { // No error with x (inner scope)
        x = x + 1;
    }
    function : void foo() {}
    function : void foo() {} // error9_Decl dup overload, error #4
    function : void bar() {}
    function : void bar(int x) {} // OK, since legal overload
};


function : void main() {


}