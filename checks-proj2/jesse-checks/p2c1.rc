int var1 = 5;
bool var2 = false;
bool var3 = true;
float var4 = 459.25;
auto aVar1 = var2;
auto aVar2 = var4;

int garith1 = var1 + 5 + 5;
int garith2 = var1 + 5 + 5;

float test500 = var1 + var4;

const int cgInt = 5;
const float cgFloat = 5.5;
const bool cgBool = false;
const int cgInt2 = cgInt;
const auto aVar3 = cgInt2;
const auto aVar4 = cgFloat;

int temporary = 5;
int temporary2 = temporary;
int temporary3 = temporary2;
int temporary4 = temporary3;
int gInt;
float gFloat;
bool gBool;

int var5 = cgInt;
float var6 = cgInt;

static int st1;
static float st2;
static bool st3;

static int st4 = 5;
static const int st5 = 6;
static int st6 = st4;
static int st7 = cgInt;
static int st8 = st5;

function : void pain () {
    int pocal1;
    int pocal11;
    float pocal2 = 6.6;
    int local111;
    float pocal3 = pocal2;
    int pocal4 = pocal1;
    int pocal5 = pocal11;

    auto var1 = ::var1;
    auto var2 = pocal2;
    const auto var3 = cgFloat;

    if (5 > 10) {
        if (var1 > 5) {
            if (false) {

            }
        }
    } else {
        if (99 > cgInt) {
            if (var1 > 11) {

            }
        } else {

        }
    }
    int sometester = 5;
    bool sometest = sometester > 10;
}

function : void zain () {
    int var1 = 6;
    int var2 = ::var1;
}

function : int func1 () {

    return 5;
}

function : int func1_2 () {
    func1();
    func1_2();


    return var1 + 5;
}

function : int func1_3() {
    int z = func1() + var1;

    exit(z);
    exit(func1() + var1);
    exit(5);

    return func1();
}

function : float func2() {
    return 5.5;
}

function : float func2_2() {
    return 5.5 + cgFloat;
}

function : bool func3() {
    return true;
}

function : bool func3_2() {
    int foo = 5;
    int bar = 6;

    return foo > bar;
}

function : void func4() {
    return;
}

function : void main () {
    int local1;
    int local11;
    float local2 = 6.6;
    float local2_2 = 6.6;
    int local111;
    float local3 = local2;
    int local4 = local1;
    int local5 = local11;
    int local6 = cgInt;
    int local7 = 5;

    const int clocal = 5;
    const int clocal2 = 5;
    const float clocal3 = 4.4;
    const float clocal4 = clocal3;

    const int c1 = 210;
    const int c2 = sizeof(c1) + c1;


    int arith1 = 5 + 10 - -local7 + -clocal2 + +local7 + +clocal2;
    int arith2 = local7 + local7 + 5;
    int arith3 = local7 - local7 - 5;
    int arith4 = +local7;
    int arith5 = local7 / clocal2 * local7 % clocal / 5 * 10 % 5;
    int arith6 = local7 & 5 | clocal2 ^ local6 & 5 | 10 ^ 3 | local7 ^ local7 & local6;
    int arith7 = 5 + 10 - --local7 + ++local7 + -clocal2 + arith6++ - arith5--;

    float arith8 = 5.5 + 10.10 - local2 + local2_2 - +local2 + -local2_2;
    float arith9 = local2 / local2_2 * local2 / 5.5 * 10.5;

    float arithtest1 = --local2;
    float arithtest2 = local2 - 1.0;

    float arith10 = 5.5 + 10.10 - --local2 + ++local2_2 + -local2 + arith8++ - arith9--;

    int sometester = 5;
    bool sometest = sometester > 10;
    bool sometest2 = sometester > sometester;

    bool bFalse = false;
    bool bTrue = true;

    bool sometest3 = arith8 > 9.5;
    bool sometest4 = arith8 > arith9;
    bool sometest5 = arith4 >= arith5;
    bool sometest6 = arith8 >= arith9;
    bool sometest7 = arith4 < arith5;
    bool sometest8 = arith8 < arith9;
    bool sometest9 = arith4 <= arith5;
    bool sometest10 = arith8 <= arith9;
    bool sometest11 = arith4 == arith5;
    bool sometest12 = arith8 == arith9;
    bool sometest13 = arith4 != arith5;
    bool sometest14 = arith8 != arith9;
    bool sometest15 = !(arith8 != arith9);
    bool sometest16 = !(sometest14);
    bool sometest17 = true && true;
    bool sometest18 = false && false;
    bool sometest19 = bFalse && bTrue;
    bool sometest20 = bTrue && bFalse;
    bool sometest21 = bFalse && bFalse;
    bool sometest22 = (arith8 > arith9) && !(arith8 != arith9);
    bool sometest23 = true || true;
    bool sometest24 = false || false;
    bool sometest25 = bFalse || bTrue;
    bool sometest26 = bTrue || bFalse;
    bool sometest27 = bFalse || bFalse;
    bool sometest28 = true && bFalse;
    bool sometest29 = bTrue || bFalse && bTrue;
    bool sometest30 = (arith8 > arith9) || sometest23 && sometest27 || sometest20 && true || false;

    int intVarCin = 0;
    float floatVarCin = 0.0;

    float fito1 = 0 * floatVarCin;
    float fito2 = floatVarCin * 0;
    bool fito3 = intVarCin != floatVarCin;
    bool fito4 = floatVarCin > intVarCin;
    float fito5 = 5;
    float fito6 = intVarCin;
    float fito7 = intVarCin * intVarCin;
    const float fito8 = cgInt + cgFloat;
    const float fito9 = cgInt;


    if (!false || true && (arith8 > arith9) || sometest23 && sometest27 || sometest20 && true || false) {

    }

    if (1 > 3) {
        cout << "yay" << endl;
    } else {
        cout << "bae" << endl;
    }

    if (3 > 1) {
        cout << "yay" << endl;

        if (true) {
            cout << "nested" << endl;
        } else {
            if (false) {
                cout << "double nested" << endl;
            }
            if (arith8 - arith8 > 6.9) {
            }
        }
    }

    if (local7 > arith5 - arith2) {
        cout << "yay" << endl;
    }

    if (local7 + arith5 > -arith2) {
        cout << "yay" << endl;
    }

    if (arith8 - arith8 > 6.9) {
        cout << "stay" << endl;
    }

    cout << c1 + 210 << endl; // outputs 420
    cout << c2 << endl; // outputs 214
    const float r1 = 420.25;
    cout << r1 + 662.50 << "\n"; // outputs 1082.75
    cout << sizeof(r1) << endl; // outputs 4
    cout << sizeof(r1) + 7.8 + clocal3 << endl; // outputs something
    cout << arith9 + arith10-- * arith9 / arith10++ << endl;

    cout << local7 << endl;
    cout << local7 << 3 << endl;
    cout << 1 << 2 << 3 << 4 << 5 << endl;
    cout << 6.6 << 6.6666 << local2 << endl;
    cout << true << cgBool << endl;
    cout << 5 << 6.6 << true << "string" << endl;
    cout << cgInt << cgFloat << cgBool << endl;
    cout << "poop" << endl;

    // cin >> intVarCin;
    // cin >> floatVarCin;

    cout << intVarCin << " " << floatVarCin << endl;

}

int local1;
int local11;
float local2 = 6.6;
float local2_2 = 6.6;
int local111;
float local3 = local2;
int local4 = local1;
int local5 = local11;
int local6 = cgInt;
int local7 = 5;

const int clocal = 5;
const int clocal2 = 5;
const float clocal3 = 4.4;
const float clocal4 = clocal3;

const int c1 = 210;
const int c2 = sizeof(c1) + c1;


int arith1 = 5 + 10 - -local7 + -clocal2 + +local7 + +clocal2;
int arith2 = local7 + local7 + 5;
int arith3 = local7 - local7 - 5;
int arith4 = +local7;
int arith5 = local7 / clocal2 * local7 % clocal / 5 * 10 % 5;
int arith6 = local7 & 5 | clocal2 ^ local6 & 5 | 10 ^ 3 | local7 ^ local7 & local6;
int arith7 = 5 + 10 - --local7 + ++local7 + -clocal2 + arith6++ - arith5--;

float arith8 = 5.5 + 10.10 - local2 + local2_2 - +local2 + -local2_2;
float arith9 = local2 / local2_2 * local2 / 5.5 * 10.5;

float arithtest1 = --local2;
float arithtest2 = local2 - 1.0;

float arith10 = 5.5 + 10.10 - --local2 + ++local2_2 + -local2 + arith8++ - arith9--;

int sometester = 5;
bool sometest = sometester > 10;
bool sometest2 = sometester > sometester;

bool bFalse = false;
bool bTrue = true;

bool sometest3 = arith8 > 9.5;
bool sometest4 = arith8 > arith9;
bool sometest5 = arith4 >= arith5;
bool sometest6 = arith8 >= arith9;
bool sometest7 = arith4 < arith5;
bool sometest8 = arith8 < arith9;
bool sometest9 = arith4 <= arith5;
bool sometest10 = arith8 <= arith9;
bool sometest11 = arith4 == arith5;
bool sometest12 = arith8 == arith9;
bool sometest13 = arith4 != arith5;
bool sometest14 = arith8 != arith9;
bool sometest15 = !(arith8 != arith9);
bool sometest16 = !(sometest14);
bool sometest17 = true && true;
bool sometest18 = false && false;
bool sometest19 = bFalse && bTrue;
bool sometest20 = bTrue && bFalse;
bool sometest21 = bFalse && bFalse;
bool sometest22 = (arith8 > arith9) && !(arith8 != arith9);
bool sometest23 = true || true;
bool sometest24 = false || false;
bool sometest25 = bFalse || bTrue;
bool sometest26 = bTrue || bFalse;
bool sometest27 = bFalse || bFalse;
bool sometest28 = true && bFalse;
bool sometest29 = bTrue || bFalse && bTrue;
bool sometest30 = (arith8 > arith9) || sometest23 && sometest27 || sometest20 && true || false;

int intVarCin = 0;
float floatVarCin = 0.0;

float fito1 = 0 * floatVarCin;
float fito2 = floatVarCin * 0;
bool fito3 = intVarCin != floatVarCin;
bool fito4 = floatVarCin > intVarCin;
float fito5 = 5;
float fito6 = intVarCin;
float fito7 = intVarCin * intVarCin;
const float fito8 = cgInt + cgFloat;
const float fito9 = cgInt;
